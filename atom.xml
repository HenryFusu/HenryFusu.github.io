<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Henry扶苏</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://henryfusu.com/"/>
  <updated>2020-05-01T00:53:55.942Z</updated>
  <id>http://henryfusu.com/</id>
  
  <author>
    <name>Henry扶苏</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为什么我们一事无成</title>
    <link href="http://henryfusu.com/2020/05/01/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E4%B8%80%E4%BA%8B%E6%97%A0%E6%88%90/"/>
    <id>http://henryfusu.com/2020/05/01/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%BB%AC%E4%B8%80%E4%BA%8B%E6%97%A0%E6%88%90/</id>
    <published>2020-05-01T00:53:06.000Z</published>
    <updated>2020-05-01T00:53:55.942Z</updated>
    
    <content type="html"><![CDATA[<p>我上了这么多学，熬了这么多夜，做了这么多习题，顶着各种压力，参加各种残酷的考试，然后谈恋爱、实习、工作、加班、我这么辛苦，竟然只为了成为一个普通人。</p><p>这种感慨是不是也曾出现在你的生命里，「熔炉」这部电影中有个非常经典的台词，我们一路奋斗，不是为了改变这个世界，而是为了不让世界改变原来的我们。在我们努力生活的同时，许许多多选择题会降临在你的面前，今天我想就几个人生重大选择题上，透过许多演讲及书籍的内容来给予解答。</p><a id="more"></a><h3 id="怎么选择自己的下一步？"><a href="#怎么选择自己的下一步？" class="headerlink" title="怎么选择自己的下一步？"></a>怎么选择自己的下一步？</h3><p>Youngme moon 在哈佛商学院的毕业演讲中说到，有一天，我儿子问我，你总是告诉我，要做那些自己怀有热情的事情，但如果我对世界上所有事情都感受不到那种狂热时，我该怎么办，Youngme moon 的回答是：在你今后的人生中需要做很多选择、做什么工作、读什么专业、住在哪个城市，如果在每个分叉路口时，你都选择了那些自己更感兴趣的，那些能激发你的好奇心的，你就会在下一个分叉路口继续喜欢让你更喜欢的。当你一直这样做的时候，有一天你早上起来，会忽然体会到，你真在做让自己怀有激情的事情。</p><h3 id="怎么跟随自己的内心？"><a href="#怎么跟随自己的内心？" class="headerlink" title="怎么跟随自己的内心？"></a>怎么跟随自己的内心？</h3><p>史蒂芬 <strong><em>·</em></strong> 史匹伯在 2016 与哈佛毕业典礼中说到，在我们人生的前二十年，我们被训练聆听让不属于我们的声音，师长与家人不断灌输他们的观念和咨询给我们，告诉我们这个世界是如何转动的，有段时间也曾以为这就是我自己的人生，但我后来开始面对自己的直觉，我了解到直觉与良知的差别。良知是告诉你，这是你应该做的，而直觉是告诉你，这是你可以做的，而这种感觉才是你开始定义自己的时候。</p><h3 id="该冒失败的风险吗？"><a href="#该冒失败的风险吗？" class="headerlink" title="该冒失败的风险吗？"></a>该冒失败的风险吗？</h3><p>大法官约翰 <strong><em>·</em></strong> 罗伯兹，2017 年受邀参加儿子就读的卡帝根山中学致词。他提到，在未来的岁月里，我希望你遭受到不公平对待，这样你才能体会到公平的价值所在；我希望你能遭受几次背叛，那样你才领悟真诚的重要；我再次祝倒霉几次，这样你才会意识到机遇、运气的意义，才能知道，你的成功或许只是运气，别人的失败也不是活该；希望当你失败的时候，你的对手能冷嘲热讽、幸灾乐祸，这样你才能知道，有风度的竞争是多么重要；最后希望你被人忽视，这样你才能知道，学会尊重、倾听是多么重要。不论你愿不愿意，这些迟早都会发生，而你是否从中受益，取决于你能否参透人生苦难所带来的价值。</p><h3 id="怎么选择自己的领域？"><a href="#怎么选择自己的领域？" class="headerlink" title="怎么选择自己的领域？"></a>怎么选择自己的领域？</h3><p>在社会当中，某些专业领域的人能乘着优势，比其他人更容易一举成名，但若我们因为这些社会趋势而选择一门自己都觉得很无聊的领域时，难倒我们一定就能活的开心吗？美国喜剧演员金凯瑞，2014 年在马赫西管理大学毕业典礼中讲到，我的父亲很想成为一名喜剧演员，但是因为害怕，所以到最后选择了一份不喜欢但还算稳定的会计师工作，在我 12 岁那年，公司倒闭了，父亲失业了，于是我暗自告诉自己，你不喜欢的事情也可能失败，那不如冒险做喜欢的事吧。如果说希望可以支撑你走过烟火般的考研的话，那么信念可以引领你一跃而过，是要怀抱热忱，还是心存恐慌，不要怀疑，选择热忱。马克 <strong><em>·</em></strong> 吐温说过，每当发现自己属于多数阵营时，就是你停下来三思的时候，一般而言，我们害怕做的事是我们最需要做的事，大多数的人宁愿选择不快乐，好避开不确定。</p><h3 id="怎么坚持短期看不到结果的事？"><a href="#怎么坚持短期看不到结果的事？" class="headerlink" title="怎么坚持短期看不到结果的事？"></a>怎么坚持短期看不到结果的事？</h3><p>马云在清华大学经管学院毕业典礼中这样说：今天很残酷、明天很残酷、后天很美好。但是绝大部分的人死在明天晚上，这就是残酷的生活，所以你今天必须很努力，才能面对明天的残酷，明天你必须更努力，才有可能看到后天的太阳。在《黑马思维》这本书中提到一个残忍的真相，如今这个时代，老师、朋友都期望你走在一条标准化的路上，考试、学习、工作、结婚、生子，只要你缺改变这个标准，你便会遭到其他羊儿们的阻挠。在电影《肖申克的救赎》中有这样一段对白，你刚进来时恨透那些 监狱的铁栏杆，后来你慢慢习惯它们，最后你发现无法没有它们，这就是体制化。然而世界上的高手们，似乎都不是依靠标准化的路而扬名立万的。</p><h3 id="怎么样的选择才是最重要的？"><a href="#怎么样的选择才是最重要的？" class="headerlink" title="怎么样的选择才是最重要的？"></a>怎么样的选择才是最重要的？</h3><p>亚马逊创办人贝佐斯，在 2010 普林斯顿大学毕业典礼上，以一则自己的故事来劝勉毕业生，大概在他 10 岁的时候，他与祖父及祖母一同驾车出去旅游，祖母则坐在他的旁边，这时祖母点燃一根烟，而贝佐斯讨厌烟味，他想起广告里说的，每抽一口烟灰减少两分钟的寿命的计算方式，算出祖母因为抽烟而减少的寿命，并将头伸向前座，告诉祖母，经过我的计算，你会因为抽烟而减少九年的寿命。原本贝佐斯期望能够得到祖父母的称赞，结果祖母听完后泪流满面，贝佐斯的祖父将车在路边停下，并打开后座们，沉默片刻后，告诉贝佐斯，Jeff，有一天你会明白，成为善良的人，比成为聪明的人更困难。聪明是种天赋，你与生俱来，善良则是中选择，选择你如何运用你的天赋，我希望今后不管的遇到人生中任何挑战与选择，千万记得，善良比聪明更重要，我跟你打赌，在你接近人生尽头的时候，有一天你会想你自己的人生，你会发现，那些最让你记得一辈子的最让你永生难忘的事，就是你在人生各种阶段的不同选择，最后你会发现，我们的选择造就我们的人生。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我上了这么多学，熬了这么多夜，做了这么多习题，顶着各种压力，参加各种残酷的考试，然后谈恋爱、实习、工作、加班、我这么辛苦，竟然只为了成为一个普通人。&lt;/p&gt;
&lt;p&gt;这种感慨是不是也曾出现在你的生命里，「熔炉」这部电影中有个非常经典的台词，我们一路奋斗，不是为了改变这个世界，而是为了不让世界改变原来的我们。在我们努力生活的同时，许许多多选择题会降临在你的面前，今天我想就几个人生重大选择题上，透过许多演讲及书籍的内容来给予解答。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>技术人如何提高自己的写作输出</title>
    <link href="http://henryfusu.com/2020/04/27/%E6%8A%80%E6%9C%AF%E4%BA%BA%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E8%87%AA%E5%B7%B1%E7%9A%84%E5%86%99%E4%BD%9C%E8%BE%93%E5%87%BA/"/>
    <id>http://henryfusu.com/2020/04/27/%E6%8A%80%E6%9C%AF%E4%BA%BA%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E8%87%AA%E5%B7%B1%E7%9A%84%E5%86%99%E4%BD%9C%E8%BE%93%E5%87%BA/</id>
    <published>2020-04-27T00:59:15.000Z</published>
    <updated>2020-04-27T00:59:54.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="技术人如何提高自己的写作输出"><a href="#技术人如何提高自己的写作输出" class="headerlink" title="技术人如何提高自己的写作输出"></a>技术人如何提高自己的写作输出</h1><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近自己一直在输出博客，无论是线上平台提交还是自己在线下记录，感觉写作这件事加起来比我以前所有的写作内容都多，这样就带来一个问题，自己在写作的时候会遇到很多问题，有些是关于写作本身的，有些是关于一些技巧的，所以想把这些分享在这里。</p><a id="more"></a><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>有时候自己在开始动笔的时候非常纠结，因为不知道自己准备要写什么，所以在头落笔之前真的是处在一种非常抓狂的状态，但一旦开始一个段落，后边基本都能顺利的进行下去。那么我们怎么才能顺利的开始第一段呢，在得到读到一篇文章，总结了两个小的思路：</p><p>认真思考你的文章，确定你的文章品类，是不是对你的读者有用，不是 “ 感觉有用 “，而是 “ 真的有用 “。现在的自媒体鱼龙混杂，有时候一不小心就掉到那些鸡汤里，并不是鸡汤不好，只是我们大多数时候更需要一些 “ 真的有用 “。</p><p>比如，写作开始之前可以试着追问自己几个问题：</p><ul><li>我这篇文章读者是否通俗易懂，如果读者理解了很久还不能明白你表述的是啥，那就说明你的文章是失败的。</li><li>我这篇文章读者读完之后是不是会有一点点收获。</li><li>我在准备这篇文章的时候都查询了哪些资料，前两条是对读者的，最后一条是针对自己的，其实在准备知识的时候对我们来说也是非常宝贵的经验，通过查询 + 输出的形式更能巩固这些知识。</li></ul><p>然后就是写文章应该更像一个双向沟通，而不是单向表达。</p><p>大多数认为写作是一种表达自我的方式，不能算这种观点错，但写作如果只是为了自我表达，那没人看也就没什么意外。所以说，如果想让更多的人阅读你的文章，就需要照顾读者的认知水平，就像是公开演讲，要寻找最大公约数。说白了，写的东西要大多数人都能读得懂，并且有收获。</p><h3 id="文章排版"><a href="#文章排版" class="headerlink" title="文章排版"></a>文章排版</h3><p>刚写文章早期，对排版注重的比较少，结果就是显示效果在公众号和 Blog 上显示的不尽人意，被提的最多的就是文章的排版有待提高。所以专门 去找了一些关于排版的资料，在此参考了 <a href="https://github.com/mzlogin/chinese-copywriting-guidelines" target="_blank" rel="noopener">Github</a> 分享的一篇技巧。</p><h4 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h4><p>以前写文章的时候是不会注意这些的，经常会把中文、英文、各种符号挤在一起，回过头去看真的扎眼。</p><p>「有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。与大家共勉之。」</p><ul><li>中英文之间需要增加空格</li></ul><p>eg. 每个程序员都需要有一个 Github 账号。</p><ul><li>中文与数字之间需要增加空格</li></ul><p>eg. 今年 30 岁了，我还没上过电视呢。</p><ul><li>数字与单位之间需增加空格</li></ul><p>eg. 我家的光纤入户宽带有 10 Gbps，SSD 一共有 10 TB。</p><p>一些特殊的比如，度 / 百分比与数字之间不需要增加空格。</p><p>eg. 新款MacBook Pro 有 15% 的性能提升。</p><ul><li>全角标点与其他字符之间不加空格。</li></ul><p>eg. 刚刚买了一部 IPhone，好开心！</p><h4 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h4><p>有人对全角和半角的概念会搞混，全角和半角是编码规范差异化导致的问题，比如英文逗号 “,” 与 “，”，明眼就能看出长短是不一样的，所以大概理解就是全角是汉字，半角是字母，汉字是占用两个字节，而半角占用一个字节，如果你用中文写作推荐使用全角。</p><ul><li>使用全角中文标点</li></ul><p>eg. 大家好，欢迎关注 Henry扶苏。</p><ul><li>遇到完整的英文整句、特殊名词，其使用半角标点</li></ul><p>eg. 乔布斯说过一句：「Stay hungry, stay foolish.」</p><ul><li>使用直引号</li></ul><p>eg. 在国家标准的文章中需要使用 “” 这种引号，但感觉这种 “” 直引号会更美观</p><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><ul><li>链接之间增加空格</li></ul><p>eg. 推荐一个好用的 <a href="https://carbon.now.sh/" target="_blank" rel="noopener">美化工具 Carbon</a>，请参阅。</p><ul><li>英文名词首字母尽量大写</li></ul><p>eg. Google、Amazon</p><ul><li>首行不要缩进</li></ul><p>eg. 首行缩进是我们从小开始写作养成的习惯，也在比较正式的文件中有格式要求，目的是区分自然段，但在自媒体这种娱乐性质的文字类，都是小段，最短可能一句话，而且有很多人喜欢剧中排列。首行缩进，反倒影响页面排版设计，不美观。我们现在接触的阅读如公众号等是没有固定格式的，一行显示的字数并不多，如果再缩进，影响阅读体验。</p><p>以上这些建议在Microsoft、Apple官网上大量使用此排版。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;技术人如何提高自己的写作输出&quot;&gt;&lt;a href=&quot;#技术人如何提高自己的写作输出&quot; class=&quot;headerlink&quot; title=&quot;技术人如何提高自己的写作输出&quot;&gt;&lt;/a&gt;技术人如何提高自己的写作输出&lt;/h1&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近自己一直在输出博客，无论是线上平台提交还是自己在线下记录，感觉写作这件事加起来比我以前所有的写作内容都多，这样就带来一个问题，自己在写作的时候会遇到很多问题，有些是关于写作本身的，有些是关于一些技巧的，所以想把这些分享在这里。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Android Studio Database Inspector 使用</title>
    <link href="http://henryfusu.com/2020/04/23/Android-Studio-Database-Inspector-%E4%BD%BF%E7%94%A8/"/>
    <id>http://henryfusu.com/2020/04/23/Android-Studio-Database-Inspector-%E4%BD%BF%E7%94%A8/</id>
    <published>2020-04-23T01:38:02.000Z</published>
    <updated>2020-05-02T05:43:20.956Z</updated>
    
    <content type="html"><![CDATA[<p>今天在逛技术网站的时候，看到了一个好东西，Database Inspector 第一眼看上去感觉没有用过，老样子赶紧百度一下，发现基本没有这方面的文章，看来这个应该是在内测还未推出的工具，首先说一下 Database Inspector  是干什么的？其实要解决的问题就是我们在调试数据库的时候，使它可以想编辑 Excel 一样的简单，直接修改直接生效，这有什么好处呢？不用我们在一点一点的去 Debug 数据了，这个看来还是非常有用的。</p><a id="more"></a><p>本来想找一些资料来整理一下，但无意间看到一个 Google 的大佬工程师已经分享了一篇教程，所以参考了一下然后简单的进行了翻译，废话不多说，一下就是具体使用方法，感兴趣的伙伴们可以看一下。以下是正文：</p><p>创建和管理本地数据库是大多数移动应用程序的核心组件。但是，无论直接使用 <strong>SQLite</strong> 还是通过 <a href="https://developer.android.com/topic/libraries/architecture/room" target="_blank" rel="noopener"><strong>Room</strong></a> 持久性库使用，Android 开发人员一直在寻求一种更好的方法来检查和调试正在运行的应用程序中的数据库。</p><p>最新版本的 Android Studio 4.1（当前在Canary中可用）附带了一个名为 <strong>Database Inspector</strong> 的新工具， 该工具可帮助您检查，查询和修改正在运行的应用程序中的数据库。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/If" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/If</a> your app uses Room and observes the query results, you don’t need to restart the app to see the changes.gif)</p><p>使用 Database Inspector，修改数据库中的数据并不比编辑电子表格难。如果您正在使用 <strong>Room</strong> 并观察查询结果，更改将立即反映在您的 App 中！</p><p>在本文中，我们将结合使用 Database Inspector 和 <a href="https://github.com/android/sunflower" target="_blank" rel="noopener"><strong>Sunflower</strong></a> App 来测试一些极端情况。Sunflower 是一个园艺 App，用于说明 Android Jetpack 的 Android 开发最佳实践。在阅读本文时，我建议您克隆这个 Github 仓库。</p><h3 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h3><p>Sunflower App 的 UI 包含两个选项卡。要将一些植物添加到我的花园中，我们看一下 <strong>“Plant List”</strong> 选项卡，其中列出了我的花园中可用的植物。在右上角有一个过滤器按钮。当我按下此按钮时，将显示以下植物列表：</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Click" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Click</a> to filter Plant List.png)</p><p>显然，此按钮可根据某些条件过滤植物。但是，让我们想象一下，我对这个项目不是很熟悉，我想通过使用数据库检查器来了解过滤的工作方式。</p><p>在 Android Studio 中打开数据库检查器，我需要从菜单栏中选择 <strong>View &gt; Tool Windows &gt; Database Inspector</strong>。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Select" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Select</a> View &gt; Tool Windows &gt; Database Inspector from the menu bar to open Database Inspector.gif)</p><p>上一步动作会启动数据库检查器。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Database" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Database</a> Inspector window.png)</p><p>现在，我需要在运行 API 级别 26 或更高级别的设备上运行应用程序，然后从下拉菜单中选择应用程序进程。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Select" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Select</a> the running app process from the dropdown menu.png)</p><p>选择要检查的应用程序过程后，数据库模式将显示在下面的面板中。要查看 Sunflower 数据库表，我需要扩展 *<em>…/ databases / sunflower-db *</em> schema。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Once" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Once</a> you select a process, the app databases are listed.png)</p><p>让我们回到该 App，看看过滤后的植物列表。名单包括 <strong>Avocado</strong>，<strong>Grape</strong>，<strong>Orange</strong> 和 <strong>Tomato</strong>。如果我可以按植物名称对植物表进行排序，那么找到 <strong>Avocado</strong> 就不难了。让我们看看数据库检查器是否可以做到这一点！</p><p>首先，我双击 <strong>plants</strong> 表以显示其数据。数据显示的默认页面大小为 50，但是您可以在较短的结果列表之间减少此数字和页面。单击 <strong>name</strong> 列可将 <strong>plant</strong> 表按条目名称排序。果然，<strong>Avocado</strong> 不在列表的最下方，我在表的第二行中找到它。</p><h3 id="查询数据库"><a href="#查询数据库" class="headerlink" title="查询数据库"></a>查询数据库</h3><p>查看 <strong>Avocado</strong> 的数据条目，<strong>growZoneNumber</strong> 最有可能是应用程序用于过滤的属性。为了验证这一点，让我们在<strong>growZoneNumber</strong>上运行查询<em>，</em>对于 <strong>Avocado</strong>而言 为 9 。实际上，该查询已经存在于 PlantDao.kt 中，我可以直接从 <strong>Room</strong> 的 <strong>@Query</strong> 批注中运行查询。每个 <strong>@Query</strong> 注释的行号旁边都有一个小运行图标。</p><p>当我单击查询 getPlantsWithGrowZoneNumber() 的运行图标并选择正确的数据库时，将出现一个弹出窗口，询问我：growZoneNumber 的值。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/You" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/You</a> can run queries directly from Query annotation.gif)</p><p>我可以输入值 <em>9</em> 并单击 <strong>“Run”</strong> 以查看查询结果。</p><p>另外，我可以键入自己的查询并在工具窗口中运行它。这给了我更多的可选择性，因为我不仅限于在 DAO 接口中定义的查询。要运行自己的查询，请单击 <strong>“Run SQL”</strong>，然后从右侧新打开的选项卡中选择 <strong>plants</strong> 数据库。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Select" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Select</a> Live Updates.png)</p><p>接下来，我在数据库选择下拉列表旁边的框中输入以下查询，然后点击<strong>Run</strong>。</p><p>“ Select * from plants where growZoneNumber = 9 “</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/You" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/You</a> can execute SQL queries in Database Inspector.gif)</p><p>这里！我们具有与打开过滤器时完全相同的植物列表。</p><h3 id="修改和调试数据库"><a href="#修改和调试数据库" class="headerlink" title="修改和调试数据库"></a>修改和调试数据库</h3><p>数据库检查器允许您在应用程序在设备上运行时修改应用程序数据库中的值，从而轻松调试应用程序。</p><p>首先，我要测试应用程序用户界面中是否有很长的植物名称。我将使用 Database Inspector 直接在数据库上编辑值，而不是更改数据源并使用新数据刷新数据库。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/You" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/You</a> can edit your database in Database Inspector.png)</p><p>现在该单元格是可编辑的，我将名称从 <strong>Apple</strong> 更改为一种非常特殊的 <strong>Apple</strong> 类型，然后按 <strong>Enter</strong>。如果您遵循此步骤，则可以在应用程序用户界面中键入任何您想要测试的长度的内容。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Database" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Database</a> Inspector helps you to modify the data just like editing a spreadsheet.gif)</p><p>现在，让我们回到该 App。请注意，我们没有做任何事情，该应用程序将显示更新的数据！如果您的应用程序使用 <strong>Room</strong> 并观察到查询结果（using LiveData / Flow），则无需触发数据库查询即可刷新数据。否则，根据您的应用触发查询的方式，您可能需要重新启动该应用或仅再次导航到相关的活动/片段。为了充分发挥 Database Inspector 的潜能，这可能是迁移您的应用程序以使用 <strong>LiveData</strong> 或 <strong>Flow</strong> 的好借口。</p><p>回顾我们的应用程序，看似名片视图并非旨在处理如此长的植物名称。稍后将解决此问题，但让我们继续下一个测试。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/The" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/The</a> app doesn’t seem to handle long text well.png)</p><p>每个植物都有不同的浇水间隔，我想看看何时浇水到期。为此，我需要在花园里添加一些植物。但是首先，我在数据库检查器中选中了 <strong>Live updates</strong> 复选框。当 <strong>Live updates</strong> 检查，数据库检查自动显示任何改变你的应用程序，使得它的数据库。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Select" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Select</a> Live Updates.png)</p><p>我回到 <strong>My Garden</strong> 选项卡，添加一些植物，例如 <strong>Avocado</strong> 和 <strong>Eggplant</strong>。但是首先，我回到 Database Inspector，双击 <strong>garden_plantings</strong> 观察表。请注意，在添加新植物时，garden_plantings 表中的数据是如何自动更新的。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Database" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Database</a> Inspector can automatically display changes.gif)</p><p>这两种植物的浇水间隔均为 3 天。我真的不想等待 3 天才能看到会发生什么，所以我将编辑数据库并更改 <strong>last_watering_day</strong>。我再次回到 Database Inspector，然后双击 <strong>garden_plantings</strong>。该 <strong>last_watering_date</strong> 是表的最后一栏。我将两个记录的值更改为较小的值，以反映今天的某个日期之前的某个时间。</p><p>![](<a href="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Edits" target="_blank" rel="noopener">https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Edits</a> to your databases are visible instantly.png)</p><p>好的，看来我的时间倒退了一点，但这对于我的测试起了作用。应用界面似乎可以很好地显示截止日期。为了未来的发展，我们建议在浇水日过后为用户添加警告。</p><p>继续尝试新的数据库检查器！如果您遇到任何问题，请不要忘记<a href="https://issuetracker.google.com/issues/new?component=192708&template=840533&title=%23database-inspector" target="_blank" rel="noopener">提交错误</a>！</p><p>最后贴上原文链接 <a href="https://medium.com/androiddevelopers/database-inspector-9e91aa265316" target="_blank" rel="noopener">https://medium.com/androiddevelopers/database-inspector-9e91aa265316</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在逛技术网站的时候，看到了一个好东西，Database Inspector 第一眼看上去感觉没有用过，老样子赶紧百度一下，发现基本没有这方面的文章，看来这个应该是在内测还未推出的工具，首先说一下 Database Inspector  是干什么的？其实要解决的问题就是我们在调试数据库的时候，使它可以想编辑 Excel 一样的简单，直接修改直接生效，这有什么好处呢？不用我们在一点一点的去 Debug 数据了，这个看来还是非常有用的。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>为什么今天不写技术文章</title>
    <link href="http://henryfusu.com/2020/04/22/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BB%8A%E5%A4%A9%E4%B8%8D%E5%86%99%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    <id>http://henryfusu.com/2020/04/22/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BB%8A%E5%A4%A9%E4%B8%8D%E5%86%99%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/</id>
    <published>2020-04-22T04:35:21.000Z</published>
    <updated>2020-04-22T04:36:17.534Z</updated>
    
    <content type="html"><![CDATA[<p>今天下班之后雄心壮志准备大写特写一篇技术文章，准备了一些一手资料，回到家打开微信公众号平台，发现今天多了 4 个用户的关注，这对于我来说真的是雪中送碳的感觉，相当于翻了昨天的 300%，虽然关注的人并不多，但对于我来说真的一件大事，由此推断我的技术文章写不出来了，所以今天特别想写一点最近这些天来写公众号的和博客的一些感受，明天继续技术文章。</p><a id="more"></a><p>目前我的公众号总用有 14 位用户，当然包括我自己的两个号、我老婆的号、我妈的号(估计是我强行给关注的)，还有应该都是我不认识的伙伴了，不过这里真的非常感谢其余 10 位关注伙伴，这真的给了我很大的信心，万一以后一不小心做成大号，希望也有你们的陪伴。</p><p>在这，简单聊一聊最近写博客和公众号的一些感受。其实这个号注册的很早 2018 年就已经注册了，那个时候就准备在上面写点东西，但中间因为创业失败、被一家公司拖欠工资、到现在这家公司的趋于稳定，我的时间也就基本被这样撕扯掉了，当然更大的原因还是自己的执行力不够，导致事情一拖再拖。但因为这次疫情，在家办公的时间多了起来，我也终于有充足的时间来对自己进行复盘，通透的梳理了一下自己的过往，也对自己未来的规划做了一些设计，终于在 4 月份开始了自己的副业自媒体生涯，希望自己可以一直坚持下去，也希望能看到的各位能有所启发，发展自己的副业。</p><p>其实在写公众号这件事上遇到最大的困难就是坚持，坚持其实跟自己的意志力有关，读过一本巨著「意志力」这本书里有一句话，决定一个人能否成功的后天因素中，排在第一位的就是意志力。道理我们都懂，但是很难做到，所以该怎么去改变呢，首先从个人来说，我觉得应该先从自身做起，比如开始跑步、开始读书、开始保持良好的作息这样的小事做起，当你可以坚持下去的时候，你的意志力也会得到锻炼，以后再做其它事的时候你也会更好的克服。还有对外多接触一些优秀的圈子、多跟其它行业优秀的、爱学习的人去接触交流，多少会对我们有促进作用。</p><p>还有一件事就是孤独，其实像公众号的排版、运营、包括博客的搭建、还有多平台的分发、引流这样的技术问题难不倒我们，真正棘手的是写作这件事真的很孤独，我们不像专业的写手，从一开始就从事这样的工作，我属于半路出家，所有的写作运营都要从零开始，很多时候我都在手足无措、抓耳挠腮，并且很难有人去指导你，这些都要你自己去主动的获取，基本就是从社群获取一点知识，从网络上获取一点知识，剩余的一些靠自己摸索。但我觉得如果我们能战胜这些孤独，可能会有很大的收获。</p><p>上周在休息的时候，偶尔听到了郭德纲相声里的一段唱，是选自北宋吕蒙正的一首词「时运赋」， 虽然我清楚词里描述不是我这样的人，但还是按耐不住一直循环播放，有想试一试的可以去 B 站去搜一下，不得不说古人的鸡汤是真的很浓，我把它贴在下边 : </p><p>时也，命也 , 运也！天有不测风云，人有旦夕祸福。</p><p>蜈蚣百足，行不及蛇。</p><p>灵鸡有翼，飞不如鸭。</p><p>马有千里之程，无人不能自往。</p><p>人有凌云之志，非运不能腾达。</p><p>文章盖世，孔子尚困于陈邦；武略超群，太公垂钓于渭水。</p><p>盗跖年长，不是善良之辈；颜回命短，实非凶恶之徒。</p><p>尧、舜至圣，却生不肖之子；瞽叟顽呆，反生大圣之儿。 </p><p>张良原是布衣，萧何称谓县吏。</p><p>晏子身无五尺，封为齐国首相；孔明卧居草卢，能作蜀汉军师。</p><p>韩信无缚鸡之力，封为汉朝大将；冯唐有安邦之志，到老半官无封。</p><p>李广有射虎之威，终身不第。</p><p>楚王虽雄，难免乌江自刎；汉王虽弱，却有江山万里。</p><p>满腹经纶，白发不第。</p><p>才疏学浅，少年登科。</p><p>有先富而后贫，有先贫而后富。</p><p>蛟龙未遇，潜身于鱼虾之间。</p><p>君子失时，拱手于小人之下。</p><p>天不得时，日月无光。</p><p>地不得时，草木不长。</p><p>水不得时，风浪不平。</p><p>人不得时，利运不通。</p><p>昔时也，余在洛阳，日投僧院，夜宿寒窑；布衣不能遮其体，淡粥不能充其饥；上人憎，下人厌，皆言：” 余之贱也！” 余曰：” 非吾贱也！乃时也，运也，命也！”</p><p>余及第登科，官至极品，位列三公；有挞百僚之杖，有斩鄙吝之剑；出则壮士执鞭，入则佳人捧袂；思衣则有绫罗锦缎，思食则有山珍海味；上人宠，下人拥，人皆仰慕，言：” 余之贵也！” 余曰：” 非吾贵也！乃时也，运也，命也！”</p><p>盖，人生在世，富贵不能移，贫贱不可欺；此乃天地循环，终而复始者也！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天下班之后雄心壮志准备大写特写一篇技术文章，准备了一些一手资料，回到家打开微信公众号平台，发现今天多了 4 个用户的关注，这对于我来说真的是雪中送碳的感觉，相当于翻了昨天的 300%，虽然关注的人并不多，但对于我来说真的一件大事，由此推断我的技术文章写不出来了，所以今天特别想写一点最近这些天来写公众号的和博客的一些感受，明天继续技术文章。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>两款超牛B的软件,非常实用</title>
    <link href="http://henryfusu.com/2020/04/21/%E4%B8%A4%E6%AC%BE%E8%B6%85%E7%89%9BB%E7%9A%84%E8%BD%AF%E4%BB%B6-%E9%9D%9E%E5%B8%B8%E5%AE%9E%E7%94%A8/"/>
    <id>http://henryfusu.com/2020/04/21/%E4%B8%A4%E6%AC%BE%E8%B6%85%E7%89%9BB%E7%9A%84%E8%BD%AF%E4%BB%B6-%E9%9D%9E%E5%B8%B8%E5%AE%9E%E7%94%A8/</id>
    <published>2020-04-21T01:06:15.000Z</published>
    <updated>2020-04-21T01:07:09.225Z</updated>
    
    <content type="html"><![CDATA[<h1 id="两款超牛B的软件-非常实用"><a href="#两款超牛B的软件-非常实用" class="headerlink" title="两款超牛B的软件,非常实用"></a>两款超牛B的软件,非常实用</h1><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>&emsp;&emsp;本来自己是想写一些技术相关的,但是写着写着突然发现最近发的几乎都和技术关系不大,可能是因为最近下班之余一直在搭建博客和公众号相关的.算了将错就错吧,人生总有会走偏的时候，既然偏了那就再偏一阵子.今天看到社群里在讨论写作相关的话题,讨论到工具这块,正好自己最近也找了好多的工具来辅助自己,索性把自己认为好的几个推荐出来,如果正好帮助到你莫感荣幸,如果正好推荐到你擅长的,请轻点喷.</p><a id="more"></a><h3 id="关于工具"><a href="#关于工具" class="headerlink" title="关于工具"></a>关于工具</h3><p>&emsp;&emsp;一个简约软件能够让你提高生产力,一个优雅的软件能够让你赏心悦目,不知大家怎么看,我本人每当用到那些简约的软件,整个人就会非常的爽,会在不使用的时候也启动一下看看,如果碰到界面非常杂乱的软件,直接会导致工作效率的下降,并且从心里抵制实用,然后去Github去找有没有开源软件,我想这应该也是一种轻度的洁癖.下面我介绍4个我目前最常用的软件(因为我的事Mac,所以都是基于Mac介绍的,不过其他平台差距不大):</p><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p>&emsp;&emsp;讲真的,这绝对是我碰到过最优雅的Markdown软件,像其它的Markdown软件或插件我基本都是用过,知道我用了这个之后我才发现,这几乎就是Markdown的究极形态,用少数派上边形容就是它[<strong>功能之强大、设计之冷静、体验之美妙、理念之先进</strong>],以前用的都是Dog Shit(请忽略这糟糕的语法). 好吧,我太激动了,下面开始介绍:</p><h4 id="简介Typora"><a href="#简介Typora" class="headerlink" title="简介Typora"></a>简介Typora</h4><p>&emsp;&emsp;它的官网Slogen:一个最小的Markdown编辑器,当然这是我翻译过来的,它支持实时预览，当然同时支持Windows、Linux,目前来说完全免费,后续不确定是否免费.</p><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Typora.jpg" style="zoom: 50%;" /><p>&emsp;&emsp;上边的是我在官网截的一张图,简直简洁的不像话,甚至有点过分.下面简单介绍下几个好用的点.</p><h4 id="优美的书写"><a href="#优美的书写" class="headerlink" title="优美的书写"></a>优美的书写</h4><p>&emsp;&emsp;一个好的编辑器,写得舒服很重要,Typora对Markdown的命令模式和用户操作模式切换的很好,即使你不懂得Markdown语法,你也能非常快的上手,因为导航栏里准备好的所有你想要的就如下图,怎么样很简单吧!</p><p>&emsp;<img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/1587392591419.jpg" style="zoom: 80%;" /></p><h4 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h4><p>&emsp;&emsp;不知道你用其他的平台插入图片是什么感觉,反正我是经常插入错误,但这在Typora上完全不会发生,你可以用命令生成、直接打开本地或网络图片、如果你都不喜欢,那你就直接拖拽过去也是可以的,这算是一个相当实用的功能了。</p><h4 id="高级功能"><a href="#高级功能" class="headerlink" title="高级功能"></a>高级功能</h4><p>&emsp;&emsp;Typora不仅支持这些基础的功能,在数学公式插入和流程图的支持也很到位,所以你是高级用户也能在这里找到感觉.</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>&emsp;&emsp;支持丰富的主题比如:Github、Gothic、NewSprint、Night等主题,如果再想了解的更深入一点,欢迎你去<a href="https://www.typora.io/" target="_blank" rel="noopener">官网</a>.</p><h3 id="Draw-io"><a href="#Draw-io" class="headerlink" title="Draw.io"></a>Draw.io</h3><h4 id="简介Draw-io"><a href="#简介Draw-io" class="headerlink" title="简介Draw.io"></a>简介Draw.io</h4><p>&emsp;&emsp;draw.io 是一个非常强大简洁的绘图工具,支持流程图,UML图、架构图、原型图等.支持网盘同步,目前永久免费.draw.io 同时提供了Web版和桌面版,目前我觉得桌面版要比网页版用起来好很多.</p><p>&emsp;&emsp;最开始使用Visio软件,后来换成mac用不了了,所以只能找下一个,后边遇到了ProcessOn，不得不说这个软件套路不少,奈何套路再多,也不能从我这拔走一根毛(主要还是在试用期感觉一般,没有太亮点,所以没有动力去开会员).后来遇到了这个开源软件,不知道为啥,我第一次见到这个软件就被这个软件吸引了,完美适配我的所有需求,支持图形种类多、免费、功能强大,最重要的是这款软件也优雅的不像话.其它软件如ProcessOn、Visio、Edraw功能也很强大,但draw.io 我也觉得完全不输上边的.所以有个性的程序员来试试吧!下面是我做了一些截图:</p><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/1587395443011.jpg" style="zoom: 45%;" /><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>&emsp;&emsp;Draw.io 支持的格式png、jpeg、svg、html、xml、url,这基本覆盖我们平时用的大部分的使用格式了.</p><h4 id="颜色选择"><a href="#颜色选择" class="headerlink" title="颜色选择"></a>颜色选择</h4><p>&emsp;&emsp;平时我在使用的时候,有个很棘手的问题,就是我基本不会配色,或者配色出来非常难看,draw.io 会提供一些颜色供你选择,我觉的这个对我这样的挺实用的,并且我真的觉得挺好看的,对于颜色选择有困难的是个福音.</p><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/1587398357312.jpg" style="zoom:65%;" /><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>&emsp;&emsp;其实还有其他好多的功能,不能在这一一展示,感兴趣可以下载来试试看.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;两款超牛B的软件-非常实用&quot;&gt;&lt;a href=&quot;#两款超牛B的软件-非常实用&quot; class=&quot;headerlink&quot; title=&quot;两款超牛B的软件,非常实用&quot;&gt;&lt;/a&gt;两款超牛B的软件,非常实用&lt;/h1&gt;&lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;本来自己是想写一些技术相关的,但是写着写着突然发现最近发的几乎都和技术关系不大,可能是因为最近下班之余一直在搭建博客和公众号相关的.算了将错就错吧,人生总有会走偏的时候，既然偏了那就再偏一阵子.今天看到社群里在讨论写作相关的话题,讨论到工具这块,正好自己最近也找了好多的工具来辅助自己,索性把自己认为好的几个推荐出来,如果正好帮助到你莫感荣幸,如果正好推荐到你擅长的,请轻点喷.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hexo 搭建免费的个人博客</title>
    <link href="http://henryfusu.com/2020/04/19/Hexo-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://henryfusu.com/2020/04/19/Hexo-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-04-19T05:29:29.000Z</published>
    <updated>2020-04-19T05:42:59.420Z</updated>
    
    <content type="html"><![CDATA[<h4 id="程序猿为什么要搭建个人博客"><a href="#程序猿为什么要搭建个人博客" class="headerlink" title="程序猿为什么要搭建个人博客"></a>程序猿为什么要搭建个人博客</h4><p>&emsp;&emsp;前几天终于更新了几篇自己的博客，<a href="https://henryfusu.com/2020/04/16/%E6%8A%80%E6%9C%AF%E4%BA%BA%E6%80%8E%E4%B9%88%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E5%92%8C%E8%BF%90%E8%90%A5%E5%85%AC%E4%BC%97%E5%8F%B7/">技术人怎么开始写博客和运营公众号</a> 、 <a href="https://henryfusu.com/2020/04/16/%E5%85%B3%E4%BA%8E%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%95%E6%B5%81/#more">关于公众号引流</a>，如果有兴趣可以点开查看一下，当然这也并非是太高深，只是我在准备写博客的时候自己整理的，如果你是准备开始可以参考一下，我感觉就是自己平时写的笔记，没有华丽的词汇，基本就是一些大白话，没办法理科生真的写不出来啊。好在也开始了，慢慢来吧。</p><a id="more"></a><p>&emsp;&emsp;这篇试着分析一下程序员使用hexo + next搭建个人的免费博客，说是免费其实在搭建的时候也花了一盒烟的钱，不过也相对于来说基本是白嫖。为什么程序员要搭建个人博客，其实这个问题我也Google了好多次，我基本上认从以下几点：</p><ul><li>对自己平时知识的总结：这个过程其实就是把我们平时积累知识再通过写作这件事加深一下印象，在写的过程中我们会反复的去验证，这样就能让我们对知识的理解更透彻。</li><li>分享经验，帮助他人：我觉得新时代的程序员在这块享受了不少便利，不像以前如果遇上难题只能去啃那些经典难啃的著作，所以我们有必要把自己在工作遇到的困难或自己的感想记录下来，如果能有幸帮助到其他人也是我们回馈的一种方式。</li><li>个人博客更自由独立：现在各个流量平台都有自己的规则，不小心触碰的话我们的文章是会被限流或删除的风险，当然最惨的是自己辛苦搭建的博客被封。所以这个时候个人的博客优势就有了，并且我们可以在这个基础上推广和优化，虽然比较繁琐，但这个过程中还是能学到非常多的知识的，对与开拓眼界很有帮助。</li></ul><h4 id="Hexo-搭建"><a href="#Hexo-搭建" class="headerlink" title="Hexo 搭建"></a>Hexo 搭建</h4><p>&emsp;&emsp;我本身是做Android开发的，如果让我自己来开发一个博客系统，对于我来说还是有点难度的，所以选择一套开源的博客系统还是有必要的，所以我最终评估选择了Hexo, 我搭建起来大概用了2天，当然这包括踩坑和优化主题的时间 , 后边我会尽量少点废话，尽量简洁。</p><h4 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo"></a>什么是Hexo</h4><p>&emsp;&emsp;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h4 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h4><p>&emsp;&emsp;这块我Google了好几，所有的基本都是大同小异的，并且我在一篇Blog上还遇到了错误的指示，这让我耽误了一些时间，所以刚开始我不推荐去博客上按照那些执行，我们应该直接去官网，上边有比较详细的教程。<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">关于安装准备我是参考官网</a>，基本上看完就可以顺利的安装上了。后边我着重介绍我们选择主题和一些比较实用的功能，对于太花哨的东西我觉得没必要，Blog的简洁也很重要。</p><h4 id="关于主题选择"><a href="#关于主题选择" class="headerlink" title="关于主题选择"></a>关于主题选择</h4><p>&emsp;&emsp;在博客搭建完成之后，原生的主题一般的很Low，所以找一款比较适合自己的主题就很有必要了，hexo 官方给了我们一些参考，Hexo <a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>，里面有很多，样式都可以参考，我个人比较喜欢Next 主题，这个在Github上受欢迎度也是很高的，所以就选择了它，后边的配置基本是以Next为基础的来配置的，当然选择其它的也都有很多文档支持。在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下 ，就是你的Blog根目录下 _config.yml, ，主要包含 Hexo 本身的配置；另一份位于主题目录下，是指 Blog/theme/next/下的 _config.yml文件，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。</p><h4 id="安装Next"><a href="#安装Next" class="headerlink" title="安装Next"></a>安装Next</h4><p>Hexo 安装主题还是挺简单的，懂得开发的基本是秒配。推荐使用Git的方式，打开终端，切换到Hexo目录下，执行以下代码：</p><p><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p><p>配置完之后就可以启用主题了，我们打开站点配置文件_config.yml 按照以下修改：</p><p><code>theme: next</code></p><h4 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h4><p>安装完成之后需要验证，首先启动 Hexo 本地站点，并开启调试模式（即加上 <code>--debug</code>），整个命令是 <code>hexo s --debug</code>。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Hexo <span class="keyword">is</span> running at http://<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">4000</span>/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p><h4 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h4><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li></ul><p>Scheme 的切换通过更改 <strong>主题配置文件</strong>，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 <code>#</code> 去除即可。</p><p>选择 Pisces Scheme</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure><h4 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h4><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 <a href="http://fontawesome.io/" target="_blank" rel="noopener">Font Awesome</a> 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。</p><p>编辑 <strong>主题配置文件</strong>，修改以下内容：</p><ol><li><p>设定菜单内容，对应的字段是 <code>menu</code>。 菜单内容的设置格式是：<code>item name: link</code>。其中 <code>item name</code>是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。</p><p>菜单示例配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;</span><br><span class="line">  archives: &#x2F;archives</span><br><span class="line">  #about: &#x2F;about</span><br><span class="line">  #categories: &#x2F;categories</span><br><span class="line">  tags: &#x2F;tags</span><br><span class="line">  #commonweal: &#x2F;404.html</span><br></pre></td></tr></table></figure><p>若你的站点运行在子目录中，请将链接前缀的 <code>/</code> 去掉</p><p>NexT 默认的菜单项有（标注 的项表示需要手动创建这个页面）：</p><table><thead><tr><th align="left">键值</th><th align="left">设定值</th><th align="left">显示文本（简体中文）</th></tr></thead><tbody><tr><td align="left">home</td><td align="left"><code>home: /</code></td><td align="left">主页</td></tr><tr><td align="left">archives</td><td align="left"><code>archives: /archives</code></td><td align="left">归档页</td></tr><tr><td align="left">categories</td><td align="left"><code>categories: /categories</code></td><td align="left">分类页</td></tr><tr><td align="left">tags</td><td align="left"><code>tags: /tags</code></td><td align="left">标签页</td></tr><tr><td align="left">about</td><td align="left"><code>about: /about</code></td><td align="left">关于页面</td></tr><tr><td align="left">commonweal</td><td align="left"><code>commonweal: /404.html</code></td><td align="left">公益 404</td></tr></tbody></table></li><li><p>设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 <code>languages/{language}.yml</code> （<code>{language}</code> 为你所使用的语言）。</p><p>以简体中文为例，若你需要添加一个菜单项，比如 <code>something</code>。那么就需要修改简体中文对应的翻译文件 <code>languages/zh-Hans.yml</code>，在 <code>menu</code> 字段下添加一项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  about: 关于</span><br><span class="line">  search: 搜索</span><br><span class="line">  commonweal: 公益404</span><br><span class="line">  something: 有料</span><br></pre></td></tr></table></figure></li><li><p>设定菜单项的图标，对应的字段是 <code>menu_icons</code>。 此设定格式是 <code>item name: icon name</code>，其中 <code>item name</code> 与上一步所配置的菜单名字对应，<code>icon name</code> 是 Font Awesome 图标的 名字。而 <code>enable</code> 可用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。</p><p>菜单图标配置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  # Icon Mapping.</span><br><span class="line">  home: home</span><br><span class="line">  about: user</span><br><span class="line">  categories: th</span><br><span class="line">  tags: tags</span><br><span class="line">  archives: archive</span><br><span class="line">  commonweal: heartbeat</span><br></pre></td></tr></table></figure><p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的 Font Awesome 图标名字） 的情况下，NexT 将会使用 作为图标。</p><p>请注意键值（如 <code>home</code>）的大小写要严格匹配</p></li></ol><h4 id="侧栏设置"><a href="#侧栏设置" class="headerlink" title="侧栏设置"></a>侧栏设置</h4><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改 <strong>主题配置文件</strong> 中的 <code>sidebar</code> 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p><ol><li><p>设置侧栏的位置，修改 <code>sidebar.position</code> 的值，支持的选项有：</p><ul><li>left - 靠左放置</li><li>right - 靠右放置</li></ul><p>目前仅 Pisces Scheme 支持 <code>position</code> 配置。影响版本<strong>5.0.0</strong>及更低版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  position: left</span><br></pre></td></tr></table></figure></li><li><p>设置侧栏显示的时机，修改 <code>sidebar.display</code> 的值，支持的选项有：</p><ul><li><code>post</code> - 默认行为，在文章页面（拥有目录列表）时显示</li><li><code>always</code> - 在所有页面中都显示</li><li><code>hide</code> - 在所有页面中都隐藏（可以手动展开）</li><li><code>remove</code> - 完全移除</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  display: post</span><br></pre></td></tr></table></figure><p>已知侧栏在 <code>use motion: false</code> 的情况下不会展示。 影响版本<strong>5.0.0</strong>及更低版本。</p></li></ol><h4 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h4><p>编辑 <strong>主题配置文件</strong>， 修改字段 <code>avatar</code>， 值设置成头像的链接地址。其中，头像的链接地址可以是：</p><table><thead><tr><th align="left">地址</th><th align="left">值</th></tr></thead><tbody><tr><td align="left">完整的互联网 URI</td><td align="left"><code>http://example.com/avatar.png</code></td></tr><tr><td align="left">站点内的地址</td><td align="left">将头像放置主题目录下的 <code>source/uploads/</code> （新建 uploads 目录若不存在） 配置为：<code>avatar: /uploads/avatar.png</code>或者 放置在 <code>source/images/</code> 目录下 配置为：<code>avatar: /images/avatar.png</code></td></tr></tbody></table><p>头像设置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: http:&#x2F;&#x2F;example.com&#x2F;avatar.png</span><br></pre></td></tr></table></figure><h4 id="设置-作者昵称"><a href="#设置-作者昵称" class="headerlink" title="设置 作者昵称"></a>设置 作者昵称</h4><p>编辑 <strong>站点配置文件</strong>， 设置 <code>author</code> 为你的昵称。</p><h4 id="站点描述"><a href="#站点描述" class="headerlink" title="站点描述"></a>站点描述</h4><p>编辑 <strong>站点配置文件</strong>， 设置 <code>description</code> 字段为你的站点描述。站点描述可以是你喜欢的一句签名:)</p><h4 id="添加「标签」页面"><a href="#添加「标签」页面" class="headerlink" title="添加「标签」页面"></a>添加「标签」页面</h4><p>新建「标签」页面，并在菜单中显示「标签」链接。「标签」页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的。 底下代码是一篇包含标签的文章的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 标签测试文章</span><br><span class="line">tags:</span><br><span class="line">  - Testing</span><br><span class="line">  - Another Tag</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>请参阅 <a href="https://hexo.io/zh-cn/docs/front-matter.html#分类和标签" target="_blank" rel="noopener">Hexo 的分类与标签文档</a>，了解如何为文章添加标签或者分类。</p><ul><li><a href="https://theme-next.iissnan.com/theme-settings.html#new-page-tags" target="_blank" rel="noopener">新建页面</a></li><li><a href="https://theme-next.iissnan.com/theme-settings.html#set-page-tags" target="_blank" rel="noopener">设置页面类型</a></li><li><a href="https://theme-next.iissnan.com/theme-settings.html#update-menu-for-tags-page" target="_blank" rel="noopener">修改菜单</a></li></ul><p>在终端窗口下，定位到 Hexo 站点目录下。使用 <code>hexo new page</code> 新建一个页面，命名为 <code>tags</code> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd your-hexo-site</span><br><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 <code>comments</code> 并将值设置为 <code>false</code>，如：</p><p>禁用评论示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2014-12-22 12:39:04</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="添加「分类」页面"><a href="#添加「分类」页面" class="headerlink" title="添加「分类」页面"></a>添加「分类」页面</h4><p>新建「分类」页面，并在菜单中显示「分类」链接。「分类」页面将展示站点的所有分类，若你的所有文章都未包含分类，此页面将是空的。 底下代码是一篇包含分类的文章的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 分类测试文章</span><br><span class="line">categories: Testing</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>请参阅 <a href="https://hexo.io/zh-cn/docs/front-matter.html#分类和标签" target="_blank" rel="noopener">Hexo 的分类与标签文档</a>，了解如何为文章添加标签或者分类。</p><ul><li><a href="https://theme-next.iissnan.com/theme-settings.html#new-page-categories" target="_blank" rel="noopener">新建页面</a></li><li><a href="https://theme-next.iissnan.com/theme-settings.html#set-page-categories" target="_blank" rel="noopener">设置页面类型</a></li><li><a href="https://theme-next.iissnan.com/theme-settings.html#update-menu-for-categories-page" target="_blank" rel="noopener">修改菜单</a></li></ul><p>在终端窗口下，定位到 Hexo 站点目录下。使用 <code>hexo new page</code> 新建一个页面，命名为 <code>categories</code> ：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">cd</span> <span class="string">your-hexo-site</span></span><br><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">new</span> <span class="string">page</span> <span class="string">categories</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong>如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 <code>comments</code> 并将值设置为 <code>false</code>，如：</p><p>禁用评论示例</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2014</span><span class="number">-12</span><span class="number">-22</span> <span class="number">12</span><span class="string">:39:04</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h4 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h4><p><strong>注意：</strong> 此特性在版本 <strong>5.0.1</strong> 中引入，要使用此功能请确保所使用的 NexT 版本在此之后</p><p>为了解决 <a href="https://www.google.com/fonts" target="_blank" rel="noopener">Google Fonts API</a> 不稳定的问题，NexT 在 5.0.1 中引入此特性。 通过此特性，你可以指定所使用的字体库外链地址；与此同时，NexT 开放了 5 个特定范围的字体设定，他们是：</p><ul><li>全局字体：定义的字体将在全站范围使用</li><li>标题字体：文章内标题的字体（h1, h2, h3, h4, h5, h6）</li><li>文章字体：文章所使用的字体</li><li>Logo字体：Logo 所使用的字体</li><li>代码字体： 代码块所使用的字体</li></ul><p>各项所指定的字体将作为首选字体，当他们不可用时会自动 Fallback 到 NexT 设定的基础字体组：</p><ul><li>非代码类字体：Fallback 到 <code>&quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif</code></li><li>代码类字体： Fallback 到 <code>consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, monospace</code></li></ul><p>另外，每一项都有一个额外的 <code>external</code> 属性，此属性用来控制是否使用外链字体库。 开放此属性方便你设定那些已经安装在系统中的字体，减少不必要的请求（请求大小）。</p><p>配置示例</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 外链字体库地址，例如 //fonts.googleapis.com (默认值)</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 全局字体，应用在 body 元素上</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Monda</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 标题字体 (h1, h2, h3, h4, h5, h6)</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Roboto</span> <span class="string">Slab</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 文章字体</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Logo 字体</span></span><br><span class="line">  <span class="attr">logo:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Lobster</span> <span class="string">Two</span></span><br><span class="line">    <span class="attr">size:</span> <span class="number">24</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 代码字体，应用于 code 以及代码块</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">PT</span> <span class="string">Mono</span></span><br></pre></td></tr></table></figure><h4 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h4><p>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 <strong>主题配置文件</strong> 中。</p><ol><li><p>链接放置在 <code>social</code> 字段下，一行一个链接。其键值格式是 <code>显示文本: 链接地址</code>。</p><p>配置示例</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Social links</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/your-user-name</span></span><br><span class="line">  <span class="attr">Twitter:</span> <span class="string">https://twitter.com/your-user-name</span></span><br><span class="line">  <span class="string">微博:</span> <span class="string">http://weibo.com/your-user-name</span></span><br><span class="line">  <span class="string">豆瓣:</span> <span class="string">http://douban.com/people/your-user-name</span></span><br><span class="line">  <span class="string">知乎:</span> <span class="string">http://www.zhihu.com/people/your-user-name</span></span><br><span class="line">  <span class="comment"># 等等</span></span><br></pre></td></tr></table></figure></li><li><p>设定链接的图标，对应的字段是 <code>social_icons</code>。其键值格式是 <code>匹配键: Font Awesome 图标名称</code>， <code>匹配键</code> 与上一步所配置的链接的 <code>显示文本</code> 相同（大小写严格匹配），<code>图标名称</code> 是 Font Awesome 图标的名字（不必带 <code>fa-</code> 前缀）。 <code>enable</code> 选项用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。</p><p>配置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Social Icons</span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  # Icon Mappings</span><br><span class="line">  GitHub: github</span><br><span class="line">  Twitter: twitter</span><br><span class="line">  微博: weibo</span><br></pre></td></tr></table></figure></li></ol><h4 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h4><p>越来越多的平台（微信公众平台，新浪微博，简书，百度打赏等）支持打赏功能，付费阅读时代越来越近，特此增加了打赏功能，支持微信打赏和支付宝打赏。 只需要 <strong>主题配置文件</strong> 中填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能。</p><p>打赏功能配置示例</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward_comment:</span> <span class="string">坚持原创技术分享，您的支持将鼓励我继续创作！</span></span><br><span class="line"><span class="attr">wechatpay:</span> <span class="string">/path/to/wechat-reward-image</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/path/to/alipay-reward-image</span></span><br></pre></td></tr></table></figure><h4 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h4><p>编辑 <strong>主题配置文件</strong> 添加：</p><p>友情链接配置示例</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># title</span></span><br><span class="line"><span class="attr">links_title:</span> <span class="string">Links</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">MacTalk:</span> <span class="string">http://macshuo.com/</span></span><br><span class="line">  <span class="attr">Title:</span> <span class="string">http://example.com/</span></span><br></pre></td></tr></table></figure><h4 id="腾讯公益404页面"><a href="#腾讯公益404页面" class="headerlink" title="腾讯公益404页面"></a>腾讯公益404页面</h4><p>腾讯公益404页面，寻找丢失儿童，让大家一起关注此项公益事业 , 建议大家都配置一下这个，看到这个之后我是很难受，所以果断配置！效果如下 <a href="http://www.ixirong.com/404.html" target="_blank" rel="noopener">http://www.ixirong.com/404.html</a></p><p>使用方法，新建 404.html 页面，放到主题的 <code>source</code> 目录下，内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"https://qzone.qq.com/gy/404/style/404style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/plain"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"/"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">homePageName</span>=<span class="string">"我的主页"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/data.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/page.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="站点建立时间"><a href="#站点建立时间" class="headerlink" title="站点建立时间"></a>站点建立时间</h4><p>这个时间将在站点的底部显示，例如 <code>© 2013 - 2015</code>。 编辑 <strong>主题配置文件</strong>，新增字段 <code>since</code>。</p><p>配置示例</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">since:</span> <span class="number">2013</span></span><br></pre></td></tr></table></figure><h4 id="订阅微信公众号"><a href="#订阅微信公众号" class="headerlink" title="订阅微信公众号"></a>订阅微信公众号</h4><p><strong>注意：</strong> 此特性在版本 <strong>5.0.1</strong> 中引入，要使用此功能请确保所使用的 NexT 版本在此之后</p><p>在每篇文章的末尾显示微信公众号二维码，扫一扫，轻松订阅博客。</p><p>在微信公众号平台下载您的二维码，并将它存放于博客<code>source/uploads/</code>目录下。</p><p>然后编辑 <strong>主题配置文件</strong>，如下：</p><p>配置示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Wechat Subscriber</span><br><span class="line">wechat_subscriber:</span><br><span class="line">  enabled: true</span><br><span class="line">  qcode: &#x2F;uploads&#x2F;wechat-qcode.jpg</span><br><span class="line">  description: 欢迎您扫一扫上面的微信公众号，订阅我的博客！</span><br><span class="line">  </span><br><span class="line">follow_me:</span><br><span class="line">  #Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;username || twitter</span><br><span class="line">  #Telegram: https:&#x2F;&#x2F;t.me&#x2F;channel_name || telegram</span><br><span class="line">  Wechat: &#x2F;images&#x2F;wechat-qcode.jpg || wechat</span><br><span class="line">  #RSS: &#x2F;atom.xml || rss</span><br></pre></td></tr></table></figure><p><strong>补充</strong>因为我是用的最新版本，上边的配置是无效的，这个百度了也没找到太好的答案，所以只能自己摸索了，一下给出我的解决方案，首先在把上边的代码插入到<strong>主题配置文件</strong>中，下一步找到theme/next/layout/_partials/post_followme.swig 文件 把下面这写代码拷贝到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- if theme.follow_me %&#125;</span><br></pre></td></tr></table></figure><p>下面，然后把下面除去最后一行以外的全部注释。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wechat_subscriber"</span> <span class="attr">style</span>=<span class="string">"display: block; padding: 10px 0; margin: 20px auto; width: 100%; text-align: center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"wechat_subscriber_qcode"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; theme.wechat_subscriber.qcode &#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">"&#123;&#123; theme.author &#125;&#125; wechat"</span> <span class="attr">style</span>=<span class="string">"width: auto; height:250px; max-width: 100%;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; theme.wechat_subscriber.description &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/1587273190829.jpg" alt=""></p><h4 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h4><p>&emsp;&emsp;其实这次搭建在看别人写的Blog时候有不好是过时甚至是错误的，这些原因大部分是由于版本升级之后导致的，其实上边这些配置完我们的Blog已经完全可用了，但如果你想配置的更好一点，建议慢慢来，这个真的不是一下就可以配置完的，想到一点配置一下，这种是最省时也是效率最高的。其实我们的<strong>站点配置文件</strong>中的配置你只要一看就知道啥意思，所以好好研究，还有就是Next的官方<a href="https://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">文档</a>已经完全足够我们使用了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;程序猿为什么要搭建个人博客&quot;&gt;&lt;a href=&quot;#程序猿为什么要搭建个人博客&quot; class=&quot;headerlink&quot; title=&quot;程序猿为什么要搭建个人博客&quot;&gt;&lt;/a&gt;程序猿为什么要搭建个人博客&lt;/h4&gt;&lt;p&gt;&amp;emsp;&amp;emsp;前几天终于更新了几篇自己的博客，&lt;a href=&quot;https://henryfusu.com/2020/04/16/%E6%8A%80%E6%9C%AF%E4%BA%BA%E6%80%8E%E4%B9%88%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E5%92%8C%E8%BF%90%E8%90%A5%E5%85%AC%E4%BC%97%E5%8F%B7/&quot;&gt;技术人怎么开始写博客和运营公众号&lt;/a&gt; 、 &lt;a href=&quot;https://henryfusu.com/2020/04/16/%E5%85%B3%E4%BA%8E%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%95%E6%B5%81/#more&quot;&gt;关于公众号引流&lt;/a&gt;，如果有兴趣可以点开查看一下，当然这也并非是太高深，只是我在准备写博客的时候自己整理的，如果你是准备开始可以参考一下，我感觉就是自己平时写的笔记，没有华丽的词汇，基本就是一些大白话，没办法理科生真的写不出来啊。好在也开始了，慢慢来吧。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>关于公众号引流</title>
    <link href="http://henryfusu.com/2020/04/16/%E5%85%B3%E4%BA%8E%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%95%E6%B5%81/"/>
    <id>http://henryfusu.com/2020/04/16/%E5%85%B3%E4%BA%8E%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%95%E6%B5%81/</id>
    <published>2020-04-16T15:15:07.000Z</published>
    <updated>2020-04-18T06:23:09.737Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;昨天写了一篇<a href="https://mp.weixin.qq.com/s?src=11&timestamp=1586957736&ver=2280&signature=ENUkdKpqxz*qEumCV6qnw25p*cJFeTKRPro1EbwhQqmnnPrWBFrJG8PKMytFFr*VuIbX0*Ur0v5LzpF3jrh0XisRWei1o7zfM1MQrp9zX*zHpJMTYHTNV4LNT8xNU1mH&new=1" target="_blank" rel="noopener">技术人怎么开始写博客和运营公众号</a> , 满心欢喜的放到了各大公共流量平台，准备等着大量的流量涌入，走上人生巅峰…，结果今天晚上回家一看几乎每个平台都只有寥寥的几个，还有的平台甚至一个观看量都没有，这对我来说是一个小小的打击。但这并不会难到我们技术人，试着从技术的原理分析我们的访问量为什么这么低。<a id="more"></a>但是当真正查起来的时候确实有点犯难，因为我毕竟是做Android开发的，对运营这块确实是一窍不通，所以只能硬着头皮这么找了。但今天无意间在一个社群里看到了一个大佬”<a href="http://mp.weixin.qq.com/profile?src=3&timestamp=1586961325&ver=1&signature=He810pyfwvkZwxQ6z2m-5fq9ckxlf8hJZo3dsuR18QDa3b918d3mfsPhTgAPlvy8diVlzGai0VbVwgG-wv1T7Q==" target="_blank" rel="noopener">程序员DD</a>“的解答，跟自己目前的情况有点相似，下面我试着用最通俗的话来分析一下。</p><p>&emsp;&emsp;文中大意是构建自己的漏斗模型，这个模型本来是广泛应用于网站和APP用户行为分析的流量监控、CRM系统、SEO优化和一些产品的应用上边，在公众号引流上我还是第一次见到，并且我也把这种方法Google了好几遍，几乎没有使用这种方式的，那这对我们有什么优势呢，下面通过一张图来表示。</p><p><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/funnel.jpg" alt=""></p><ol><li>第一部分是属于公共的流量平台</li><li>第二部分是个人的自建网站</li><li>第三部分是微信公众号</li></ol><p>&emsp;&emsp;上面基本是写博客基本会用到的平台，用户的流量会逐层层的向下过滤，逐渐的从流量平台沉淀到微信公众号，用户会越来越少，但少并不一定是坏事，因为留下的可以认为是用户粘性比较高的。</p><p>&emsp;&emsp;那有人会问，为什么不直接在微信公众号直接进行引流呢？</p><ul><li>因为微信公众号是一个相对比较封闭的平台，你在百度、Google等去搜索的时候基本搜不到微信公众号的内容，而通过微信公众号搜索的话也不是很方便，所以通过微信自己引流还是有点难度，这就形成了上边的漏斗模型。</li><li>很多流量平台最近对微信公众号的二维码不友好，也就是平台会识别你的文章里边是不是包含二维码，如果包含的话会对你的文章进行限流操作，这可能也就是我的文章基本没人访问的原因，所以这个时候我们需要用个人的博客对公共平台进行第一次引流（一个悲伤的故事是我的个人博客还没有搭好）。等引到个人博客的时候，我们的可定制性就很高了，可以在里面随便的放二维码，也可以对自己的博客进行SEO优化（如果个人博客访问量大的话也可以接入广告平台增加收入）。在经过博客这层的沉淀用户就有很大的可能去关注我们的公众号。</li></ul><p>&emsp;&emsp;其实经过上面的梳理，我们在写作的时候会有一个大致明确的方向：</p><ul><li>文章在自己的独立博客首发，占领内容SEO优势</li><li>在第一层的公共流量平台扩散，此时注意不要在文中显示我们的二维码，要替换成我们的个人公众号平台链接，用户链接到个人博客中就可以实现向公众号引流。</li></ul><p>&emsp;&emsp;用户在引流过程中，如果以漏斗模型为执行标准，需要严格执行，再去定义自己的引流计划可能会有事半功倍的效果，不然可能反其道行之。还有千万切记不要买粉，我看好多人写怎么涨粉，给的建议居然是在群里发红包的方式让用户去关注公众号，这样虽然粉丝上去了，但可以肯定基本是僵尸粉，也就是安慰自己一下没什么用。</p><p>&emsp;&emsp;还有一点关于写作内容的分享，像我刚开始的时候根本是无从下手，因为自己一心只想着写技术的文章，其实我们抛开技术还有很多的题材可以写，况且刚开始也不会有人关注你，随便写丢人就丢人。推荐给技术人几个写作的方向：</p><ul><li>杂谈，比如我们今天看了一本书，收到什么启发都可以写下来。</li><li>鸡汤，今天我看了一段很浓的鸡汤，我们也可以以这个拓展我们的想象。</li><li>实践总结，在工作中我们攻克了哪些难点。</li><li>干货，完全可以做一个系列的技术文章。</li><li>技术细节，工作中我遇到哪些错误，也完全可以以一个小的Story写出来。</li></ul><p>&emsp;&emsp;今天就写这么多了，后面我也会按照这个模式去坚持写博客，坚持运营。因为我还没有个人博客，插播一条广告 “Henry扶苏”。</p><p>今天不想跑,所以才去跑,这才是长距离跑者的思维方式.<br>    欢迎关注个人公众号 HenryFusu,希望一起成长.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;昨天写了一篇&lt;a href=&quot;https://mp.weixin.qq.com/s?src=11&amp;timestamp=1586957736&amp;ver=2280&amp;signature=ENUkdKpqxz*qEumCV6qnw25p*cJFeTKRPro1EbwhQqmnnPrWBFrJG8PKMytFFr*VuIbX0*Ur0v5LzpF3jrh0XisRWei1o7zfM1MQrp9zX*zHpJMTYHTNV4LNT8xNU1mH&amp;new=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;技术人怎么开始写博客和运营公众号&lt;/a&gt; , 满心欢喜的放到了各大公共流量平台，准备等着大量的流量涌入，走上人生巅峰…，结果今天晚上回家一看几乎每个平台都只有寥寥的几个，还有的平台甚至一个观看量都没有，这对我来说是一个小小的打击。但这并不会难到我们技术人，试着从技术的原理分析我们的访问量为什么这么低。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>技术人怎么开始写博客和运营公众号</title>
    <link href="http://henryfusu.com/2020/04/16/%E6%8A%80%E6%9C%AF%E4%BA%BA%E6%80%8E%E4%B9%88%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E5%92%8C%E8%BF%90%E8%90%A5%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    <id>http://henryfusu.com/2020/04/16/%E6%8A%80%E6%9C%AF%E4%BA%BA%E6%80%8E%E4%B9%88%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2%E5%92%8C%E8%BF%90%E8%90%A5%E5%85%AC%E4%BC%97%E5%8F%B7/</id>
    <published>2020-04-16T15:14:31.000Z</published>
    <updated>2020-04-16T15:14:55.655Z</updated>
    
    <content type="html"><![CDATA[<h4 id="自述"><a href="#自述" class="headerlink" title="自述"></a>自述</h4><p>&emsp;&emsp;其实我最早接触Android的时候是2013年，那个时候移动应用开发正是大火的时候，满大街的培训班揭竿而起，所以我也算赶上一班车进入到这个行业。说来惭愧，到现在我已经有将近7年的工作经验（java/c++/js）都有过开发经验，本应该是一个程序员的黄金时期，但从现在来看目前还是默默无闻、泯然众人。<a id="more"></a>最近因为疫情的影响，自己也想了很多，为什么很多人技术都差不多，但是从目前的现状来看却差距很大，很多大佬都功成名就，这里边当然有个人努力的原因，但是不是还有其它的条件在制约着我们。其实里边的原理也很简单，很多大佬不仅能在技术上有所突破，更重要的是他们有持续输出和不断学习的习惯，把自己的经验、犯过的错、理解和技术变成文字，提升自己的知名度，从而达到人生巅峰，迎娶白富美。</p><h4 id="为什么要写博客"><a href="#为什么要写博客" class="headerlink" title="为什么要写博客"></a>为什么要写博客</h4><p>&emsp;&emsp;上面谈到，好多大佬通过输出的方式提升了自己的影响力，当用了知名度之后不仅是会有一份好的工作，还有自己的圈子也会得到提升，现在好多大佬还通过自己的公众号和各种圈子进行变现，而且这种变现很可能是让你可以实现财富自由的概念。那么对于我们个人还有写博客的必要吗？当然有，博客不仅可以让我们提升自己的知名度（前提是自己能输出干货），还能大幅度提升我们对技术的理解，达到融会贯通的作用。其实我自己认为对技术的理解有三个层次：一、是我们从脑子里理解；二、我们可以完整的表述在书面上；三、可以通俗说的讲给别人听。如果想达到通俗的讲给别人听，那么完整的书面表达还是挺有必要的，还能提升自己的表达能力和思维能力。</p><h4 id="怎么开始写博客"><a href="#怎么开始写博客" class="headerlink" title="怎么开始写博客"></a>怎么开始写博客</h4><p>&emsp;&emsp;其实对这个问题我也不是很有把握，只能根据自己最近的学习去总结去一步一步踩坑，没办法这步是总要走的，看的再多的博客自己踩坑这步也会毫无疑问的走一遍，所以我们放松心态，饭慢慢吃、路慢慢走。</p><p>&emsp;&emsp;首先平台选择，因为我是做技术出身的，所以我会在一个偏技术的论坛去准备（比如掘金、SegmentFault、CSDN、知乎、简书），当然也可以自己使用hexo+Github 去搭建一套属于自己的免费博客平台，我目前刚选好方案申请下来域名，还没有开始搭建，后续搭建成功之后我会再整理一篇去记录整个过程。对于自建以外的论坛上面的几个还是对技术人比较友好的，当然还有其它的平台，比如博客园、开源中国等，但上边两个是早期比较火爆的技术平台，以前大佬们写作都会发表在上面，最近几年新平台的崛起让博客园、开源中国等不再是写作首选了，而且因为界面确实跟不上时代，非常的杂乱，所以不准备在上边写（毕竟有点视觉洁癖）。</p><p>&emsp;&emsp;写了几篇发现，上边的平台是每个平台都发一遍，而且还要微调格式，这样对刚开始写博客的我来说时间有点浪费，于是开始在Google上查找公共平台，其中两个比较推荐的OpenWrite和简媒，简媒是支持比较多平台的也是比较早的，但对它的写作界面不来电，所以果断选择OpenWrite，这个是刚过了内测的一个多平台转发插件，目前使用感觉挺方便的，支持Markdown语法，也可以查看自己的阅读量和管理文章，目前阶段完美符合我的需求，因为这个是一个Google 插件，<a href="https://openwrite.cn/" target="_blank" rel="noopener">安装方法请参考官网</a>。使用了这个之后效率会提升不少，目前已经开了会员继续使用。</p><p>&emsp;&emsp;另外一个就是图床的选择，我们在写博客的时候其实图片放在本地不是一个好的选择，因为一旦不小心被删了，我们的图片就显示不了，所以需要选择一个图床。在调研了几个平台之后我选择了PicGo+阿里云OSS的方案，总共花了9块钱买了40G的空间，其它方案都有利弊，后续我会把这篇详细的记录下来。</p><h4 id="为什么要运营公众号"><a href="#为什么要运营公众号" class="headerlink" title="为什么要运营公众号"></a>为什么要运营公众号</h4><p>&emsp;&emsp;其实我们写博客一部分是加深我们对技术的理解程度，另一个应该就是希望能挣点钱就更好了，那么这个时候微信公众号的优势就体现出来了，因为微信本就是一个非常大的流量池，并且生态非常的好，所以是非常好的变现平台，其它平台做起来之后都会向公众号引流。现在做公众号是非常的难，毕竟做的人太多了，如果是在05-07年那会做这个事，那真是屎壳郎碰上窜稀的—有吃有喝。现在难度确实会大很多，但难不见得我们就不做，毕竟微信的体量在那，做的好还是有点机会的。很惭愧目前微信公众号我还没有完全弄明白，后面我会边熟悉边输出。如果正好帮到了你倍感荣幸。</p><h4 id="对于写作的一些看法"><a href="#对于写作的一些看法" class="headerlink" title="对于写作的一些看法"></a>对于写作的一些看法</h4><p>&emsp;&emsp;对于我来说，我是理科出身，对于写作这件事非常之没有天分，有时候写出来的东西自己都不想看辣眼睛，这可能也是大部分技术人的通病。所以需要如何改变呢，我谈谈自己的实践，可能不对但反映我的真实状态，以下列举几点：</p><ul><li>我会每天花10分钟快速回顾自己经历的一天，这个不需要太多时间，就是快速的写出来，我大概连续了不到4个月，目前感觉就是文笔会比以前好，也不像以前那么俗了，这件事还是在坚持。</li><li>再就是每天抽一点时间去读书，现在读书的渠道也有很多，我是在微信读书，隔一段时间就零用无限卡，基本上也没有花什么钱，属于白嫖。在看书的时候我会把好多我觉得有道理的句子全部都划上线，然后在读完这本书的时候统一把划线的整理出来，放到印象笔记里，供以后写作的时候用。说实话这个短时间真是看不到效果，至少目前我看不到，但目前看不到不代表以后也会没效果，所以这件事也没有捷径，就是坚持。</li><li>还有就是每天都看大量的技术文档，一定要看英文的，看不懂也要看，一段时间之后你会发现你的英语长进非常大，而且理解的更透彻了。不得不说技术文章真的是太难写了，你要考虑各个方面，所以这个也不能着急，如果想写好就从最简单的去写，不要觉得简单就没有技术含量，其实所有的高级技术都是用这些基础搭建起来的，试着从简单入手一点点深入，后面我会慢慢的从基础的写起。写了这么多也不知如何收笔，所以就到这里吧 , 文采有限请谅解。</li></ul><h5 id="如果你也想在工作之外搞一个小副业，希望可以一同进步，当然也可以关注我的公众号，非常希望能一起冲破自己的瓶颈，在进步的路上不孤单。最后我的公众号”Henry扶苏”。"><a href="#如果你也想在工作之外搞一个小副业，希望可以一同进步，当然也可以关注我的公众号，非常希望能一起冲破自己的瓶颈，在进步的路上不孤单。最后我的公众号”Henry扶苏”。" class="headerlink" title="如果你也想在工作之外搞一个小副业，希望可以一同进步，当然也可以关注我的公众号，非常希望能一起冲破自己的瓶颈，在进步的路上不孤单。最后我的公众号”Henry扶苏”。"></a>如果你也想在工作之外搞一个小副业，希望可以一同进步，当然也可以关注我的公众号，非常希望能一起冲破自己的瓶颈，在进步的路上不孤单。最后我的公众号”Henry扶苏”。</h5>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;自述&quot;&gt;&lt;a href=&quot;#自述&quot; class=&quot;headerlink&quot; title=&quot;自述&quot;&gt;&lt;/a&gt;自述&lt;/h4&gt;&lt;p&gt;&amp;emsp;&amp;emsp;其实我最早接触Android的时候是2013年，那个时候移动应用开发正是大火的时候，满大街的培训班揭竿而起，所以我也算赶上一班车进入到这个行业。说来惭愧，到现在我已经有将近7年的工作经验（java/c++/js）都有过开发经验，本应该是一个程序员的黄金时期，但从现在来看目前还是默默无闻、泯然众人。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>HashMap 多知多用</title>
    <link href="http://henryfusu.com/2020/04/16/HashMap-%E5%A4%9A%E7%9F%A5%E5%A4%9A%E7%94%A8/"/>
    <id>http://henryfusu.com/2020/04/16/HashMap-%E5%A4%9A%E7%9F%A5%E5%A4%9A%E7%94%A8/</id>
    <published>2020-04-16T15:13:35.000Z</published>
    <updated>2020-04-18T06:18:24.605Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp;在面试中我面试包括我参见的一些面试一直比较喜欢问HashMap原理，不是其原理有多深奥，是因为HashMap几乎是面试的必问点，然而还有大部分的人不能清楚的描述。觉得有必要写一篇来记录一下，一来希望可以帮助有需要的人，二来让自己加深印象。在写这篇之前我也是把源码看了又看，博客翻了又翻，生怕描述错误，如果大家有发现错误的地方还望指正，另外大牛勿喷。以下进入正题：</p><a id="more"></a><h3 id="HashMap-是什么？"><a href="#HashMap-是什么？" class="headerlink" title="HashMap 是什么？"></a>HashMap 是什么？</h3><p>&emsp;&emsp;这是百度百科给的定义：基于<a href="https://baike.baidu.com/item/%E5%93%88%E5%B8%8C%E8%A1%A8/5981869" target="_blank" rel="noopener">哈希表</a>的 Map 接口的实现。此实现提供所有可选的映射操作，并允许使用 null 值和 null 键，特别是它不保证该顺序恒久不变。通俗的讲，其实HashMap如何有效的存、取、键值对。</p><h3 id="为什么面试喜欢问HashMap？"><a href="#为什么面试喜欢问HashMap？" class="headerlink" title="为什么面试喜欢问HashMap？"></a>为什么面试喜欢问HashMap？</h3><p>&emsp;&emsp;现在Java开发面试、Android开发面试，大家好像都喜欢问HaspMap的实现原理，我曾经遇到过一个面试，面试就问了一个HaspMap，从头到尾面了接近30分钟，然后我就被淘汰了…。其实好多同事也会问，HashMap有什么可聊的，开发中直接使用就可以了，如果要用到的时候直接去网上一百度不是都有吗？但是面试了很多候选人，就算在面试前告诉他们会问到HashMap，还是有大部分人挂在这，这其中涉及对数据结构的不理解，对策略的不理解。个人感觉深入的问其原理无非是想从一个点开始，逐渐打开你的知识体系，了解你对基础数据结构、策略的掌握程度，由点及面储备知识的广度，从而更能考验候选人的能力。</p><h3 id="怎样表示一个键值对？"><a href="#怎样表示一个键值对？" class="headerlink" title="怎样表示一个键值对？"></a>怎样表示一个键值对？</h3><p>&emsp;&emsp;其实表示键值对非常简单，在Java的知识体系中声明一个类即可，如下：这个类就可以代表键值对，包含两个属性 K 和 V。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">static class Node&lt;K,V&gt; &#123;</span><br><span class="line">        final K key;</span><br><span class="line">        V value;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;只有一个类还是不够的，根据Java的面向设计规则，需要一个接口来描述一些动作，在Map接口中还提供了一个内部接口 Entry&lt;K , V&gt;,它表示Map中的一个实体，接口中有 getKey() , getValue() 方法。所以在HashMap中上面这类定义为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; &#123;</span><br><span class="line">        final int hash;</span><br><span class="line">        final K key;</span><br><span class="line">        V value;</span><br><span class="line">        Node&lt;K,V&gt; next;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;下面是Entry接口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">interface Entry&lt;K, V&gt; &#123;</span><br><span class="line"></span><br><span class="line">        K getKey();</span><br><span class="line">        V getValue();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="K-V键值对在HashMap中是如何存储的？"><a href="#K-V键值对在HashMap中是如何存储的？" class="headerlink" title="K-V键值对在HashMap中是如何存储的？"></a>K-V键值对在HashMap中是如何存储的？</h3><p>&emsp;&emsp;在Java中，最基础的存储结构就是两种，一种是数组，另一种是引用，这两个存储结构可以构造所有的数据结构，在Java1.8以前采用数据+链表，在1.8以后采用数组+链表+红黑树的方式构成的。HashMap本质上是一种叫做”链表散列”的数据结构，也就是我们通常所说的数组和链表，关于数组和链表的优缺点其实大家已经非常了解了。</p><ul><li>数组优点：使用方便，查询效率比链表高，内存一般为连续内存。缺点：插入和删除的性能差</li><li>链表优点：可动态添加删除 大小可变，插入和删除性能高。缺点：只能通过顺次指针访问，查询效率低</li><li>红黑树的描述请自行参考，至于为什么选用红黑树，网上是这么解释的：<br>因为Map中桶的元素初始化是链表保存的，其查找性能是O(n)，而树结构能将查找性能提升到O(log(n))。当链表长度很小的时候，即使遍历，速度也非常快，但是当链表长度不断变长，肯定会对查询性能有一定的影响，所以才需要转成树。<br><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/hashmap.jpg" alt=""></li></ul><p>&emsp;&emsp;在使用中到底会选用哪种方式来存储呢？查找、插入、删除的场景在实际的开发中都会用到，其实在使用的时候考虑到查找的需求会比较多，因为可以直接用下标定位到数组存储的位置，所以HashMap采用的数组存储的方法。下面截取了一段。可以看到确实是使用了数组进行存储。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">final V putVal(int hash, K key, V value, boolean onlyIfAbsent,</span><br><span class="line">                   boolean evict) &#123;</span><br><span class="line">        Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i;</span><br><span class="line">        if ((tab &#x3D; table) &#x3D;&#x3D; null || (n &#x3D; tab.length) &#x3D;&#x3D; 0)</span><br><span class="line">            n &#x3D; (tab &#x3D; resize()).length;</span><br><span class="line">        if ((p &#x3D; tab[i &#x3D; (n - 1) &amp; hash]) &#x3D;&#x3D; null)</span><br><span class="line">            tab[i] &#x3D; newNode(hash, key, value, null);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;上面说到，以数组的形式来存储key-value对象，那在HashMap中是怎样确定数组索引的位置的呢？</p><ul><li>第一步:对Key值做Hash运算<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">static final int hash(Object key) &#123;</span><br><span class="line">        int h;</span><br><span class="line">        return (key &#x3D;&#x3D; null) ? 0 : (h &#x3D; key.hashCode()) ^ (h &gt;&gt;&gt; 16);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li>第二步：对<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">final V putVal(int hash, K key, V value, boolean onlyIfAbsent,</span><br><span class="line">                  boolean evict) &#123;</span><br><span class="line">       Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i;</span><br><span class="line">     &#x2F;*table就是数组中的索引，如果为null或0就初始化*&#x2F;</span><br><span class="line">       if ((tab &#x3D; table) &#x3D;&#x3D; null || (n &#x3D; tab.length) &#x3D;&#x3D; 0)</span><br><span class="line">           n &#x3D; (tab &#x3D; resize()).length;</span><br><span class="line">     &#x2F;*根据计算的下标，如果有值则直接覆盖，如果没有值则直接插入，n是一个2的幂*&#x2F;</span><br><span class="line">       if ((p &#x3D; tab[i &#x3D; (n - 1) &amp; hash]) &#x3D;&#x3D; null)</span><br><span class="line">           tab[i] &#x3D; newNode(hash, key, value, null);</span><br><span class="line">       else &#123;</span><br><span class="line">           Node&lt;K,V&gt; e; K k;</span><br><span class="line">         &#x2F;*到这里说明发生了碰撞，这个时候就会进行碰撞处理*&#x2F;</span><br><span class="line">           if (p.hash &#x3D;&#x3D; hash &amp;&amp;</span><br><span class="line">               ((k &#x3D; p.key) &#x3D;&#x3D; key || (key !&#x3D; null &amp;&amp; key.equals(k))))</span><br><span class="line">               e &#x3D; p;</span><br><span class="line">           &#x2F;*如果节点属于树，说明碰撞程度已经超过8个了，就转为红黑树来处理*&#x2F;</span><br><span class="line">           else if (p instanceof TreeNode)</span><br><span class="line">               e &#x3D; ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value);</span><br><span class="line">           else &#123;</span><br><span class="line">               for (int binCount &#x3D; 0; ; ++binCount) &#123;</span><br><span class="line">                   if ((e &#x3D; p.next) &#x3D;&#x3D; null) &#123;</span><br><span class="line">                       p.next &#x3D; newNode(hash, key, value, null);</span><br><span class="line">                   &#x2F;*如果大于了链表碰撞预设大小，判断是扩容还是专用红黑树了*&#x2F;</span><br><span class="line">                       if (binCount &gt;&#x3D; TREEIFY_THRESHOLD - 1) &#x2F;&#x2F; -1 for 1st</span><br><span class="line">                           treeifyBin(tab, hash);</span><br><span class="line">                       break;</span><br><span class="line">                   &#125;</span><br><span class="line">                   &#x2F;*碰撞的key相等，这时会新老节点替换*&#x2F;</span><br><span class="line">                   if (e.hash &#x3D;&#x3D; hash &amp;&amp;</span><br><span class="line">                       ((k &#x3D; e.key) &#x3D;&#x3D; key || (key !&#x3D; null &amp;&amp; key.equals(k))))</span><br><span class="line">                       break;</span><br><span class="line">                   p &#x3D; e;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           if (e !&#x3D; null) &#123; &#x2F;&#x2F; existing mapping for key</span><br><span class="line">               V oldValue &#x3D; e.value;</span><br><span class="line">               if (!onlyIfAbsent || oldValue &#x3D;&#x3D; null)</span><br><span class="line">                   e.value &#x3D; value;</span><br><span class="line">               afterNodeAccess(e);</span><br><span class="line">               return oldValue;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       ++modCount;</span><br><span class="line">       &#x2F;* 超过了预定的值，这时候就需要扩容了*&#x2F;</span><br><span class="line">       if (++size &gt; threshold)</span><br><span class="line">           resize();</span><br><span class="line">       afterNodeInsertion(evict);</span><br><span class="line">       return null;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>当然后边还有插入红黑树的操作，这里不做分析，有兴趣请查看putTreeVal()这个函数。<h3 id="java中是怎样处理Hash冲突的"><a href="#java中是怎样处理Hash冲突的" class="headerlink" title="java中是怎样处理Hash冲突的"></a>java中是怎样处理Hash冲突的</h3>下面有一个拓展阅读我觉得讲的特别详细<a href="https://www.jianshu.com/p/4d3cb99d7580" target="_blank" rel="noopener">Hash冲突</a><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>HashMap设计的初衷是希望可以存储一组键值对，并且可以快速的查找</li><li>在快速查找上，HashMap在设计上使用数组实现，利用数组查找索引速度快的优势</li><li>在数组的存储上，使用了Object的Hash算法，通过Hash算法对Key值进行计算，然后对数组长度进行取&amp;运算，获取数组最终的索引。虽然进行复杂的计算，但还是会有Hash冲突，为了解决Hash冲突，设计者又设计了链表地址法，冲突之后转换为链表存储。那么在数据量比较大或者极端的时候，冲突的链表会越来越大，这个时候设计者为了解决性能问题，在链表大于8的时候把链表转换为红黑树，将o（n）复杂度的提升至o(log n)。<br><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/relax.jpg" alt=""></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;在面试中我面试包括我参见的一些面试一直比较喜欢问HashMap原理，不是其原理有多深奥，是因为HashMap几乎是面试的必问点，然而还有大部分的人不能清楚的描述。觉得有必要写一篇来记录一下，一来希望可以帮助有需要的人，二来让自己加深印象。在写这篇之前我也是把源码看了又看，博客翻了又翻，生怕描述错误，如果大家有发现错误的地方还望指正，另外大牛勿喷。以下进入正题：&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java集合类框架</title>
    <link href="http://henryfusu.com/2020/04/16/Java%E9%9B%86%E5%90%88%E7%B1%BB%E6%A1%86%E6%9E%B6/"/>
    <id>http://henryfusu.com/2020/04/16/Java%E9%9B%86%E5%90%88%E7%B1%BB%E6%A1%86%E6%9E%B6/</id>
    <published>2020-04-16T15:12:00.000Z</published>
    <updated>2020-04-18T06:05:20.448Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>&emsp;&emsp;在平时的开发里我们经常用到集合框架，比如ArrayList、HashMap、HashTable、HashSet，但是你有没有否关注过在某种特殊的场景下是否还有其它功能一样但效率更高、容错率更高的框架呢。其实我们常用的集合框架完全能帮我们解决问题，但作为一个不安分的程序员，在闲下来之后总是想试着分析分析其它的。说干就干，首先我们先要把我们的一些集合框架列出来再分别介绍，一图胜千言：</p><a id="more"></a><p><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/Arraylist.jpg" alt=""><br>&emsp;&emsp;唉！作图的天分实在是太差，凑合看吧。上面是自己通过官方文档和其它渠道总结的，目测应该是算比较全面的了，如果有遗漏后边会继续补充。不整理不知道，原来有这么多数据结构框架和衍生版本，不知道是自己的知识储备太差还是平时关注比较少，虽然这里边有一些已经不推荐使用了，但我还是想全面了解一下，毕竟不会有坏处。</p><p>&emsp;&emsp;本来想总结几篇常用的数据结构框架，但看在这么多不认识的，姑且多总结一些吧。这片就对这些进行一些总体的总结，后边单开章节来分别介绍，首先把他们的大致用法和解释标注一下，总结的不好，如果发现有错误我会及时修改。我在写博客的时候有个习惯，非常喜欢用图来表示，总感觉文字太多了会有些难以看见去，并不是说文字描述不好，可能还是自己的文字功底太差导致的吧！废话不多说，下面进行简单总结：</p><p>&emsp;&emsp;关于基础的Set、Map、List、Queue这些数据结构这里不做过多的描述，大部分程序员对这些都是又一些概念的，依稀主要对以实现类在单线程和多线程的使用上进行区分<br>|             | 单线程                                                       | 并发                                                         |<br>| ———– | ———————————————————— | ———————————————————— |<br>| List        | ArrayList ：Java 动态数组  LinkedList：线性数据结构          | CopyOnWriteArrayList：是一个线程安全的ArrayList，做遍历用 <br>Vector：支持线程同步的动态数组 |<br>| Queue/Deque | ArrayDeque：双端队列实现 <br>Stack：标准的后进先出的栈  <br>PriorityQueue：通过二叉小顶堆实现 | ArrayBlockingQueue：数组实现的线程安全的有界的阻塞队列  ConcurrentLinkedDeque / ConcurrentLinkedQueue：非阻塞，无锁，无界 ，线程安全双端操作的队列  <br>DelayQueue：在指定时间才能获取队列元素  LinkedBlockingDeque / LinkedBlockingQueue：可选容量的有界双向链表队列，可设置是否带边界  LinkedTransferQueue：可将元素<code>transfer</code>进行w/o存储  PriorityBlockingQueue：支持优先级的无界阻塞队列  SynchronousQueue：使用<code>Queue</code>接口进行<code>Exchanger</code> |<br>| Map         | HashMap：散列表，存放Key-Value的数据结构<br>EnumMap：Key 可以是Enum类型的对象  Hashtable：基于Dictionary类实现的比较陈旧  IdentityHashMap：严格判断key值是否相等  LinkedHashMap：保持插入顺序  TreeMap：对插入的键进行排序  <br>WeakHashMap：适用于做一些缓存操作 | ConcurrentHashMap：它是HashMap的一个线程安全的、支持高效并发的版本  <br>ConcurrentSkipListMap：一个并发安全, 基于skip list 实现有序存储的Map |<br>| Set         | HashSet：存储元素不可重复，底层基于HashMap <br> EnumSet：专门为Eunm设计的集合类  <br>BitSet：Bit或密集的整数Set  LinkedHashSet：保持Key插入顺序  <br>TreeSet：有序集合 | ConcurrentSkipListSet：排序并发Set  <br>CopyOnWriteArraySet：做遍历用 |</p><p>&emsp;&emsp;上面对这些集合类做了一些总结，几乎每个应用场景都有对应的功能，现在回想起来以前代码写的确实性能欠佳，如果替换成以上的性能估计会提升不少，所以后面尝试对自己的应用做一些数据方面的性能处理。这一篇写到这里，后边会把一些集合类拿出来分析，预计能提升不少的见识。刚开始写博客确实语言组织方面差点，不过相信坚持一段时间之后会有提升的。</p><p>&emsp;&emsp;学习之后，你解决问题的思路和方法是否得到了改变。如果你学习之后和学习之前，思考和行动都一样，那么显然这样的学习是无效的。从现在开始努力，日拱一卒。如果有想一起进步的朋友可以关注微信公众号。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;p&gt;&amp;emsp;&amp;emsp;在平时的开发里我们经常用到集合框架，比如ArrayList、HashMap、HashTable、HashSet，但是你有没有否关注过在某种特殊的场景下是否还有其它功能一样但效率更高、容错率更高的框架呢。其实我们常用的集合框架完全能帮我们解决问题，但作为一个不安分的程序员，在闲下来之后总是想试着分析分析其它的。说干就干，首先我们先要把我们的一些集合框架列出来再分别介绍，一图胜千言：&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>你好 2020</title>
    <link href="http://henryfusu.com/2020/04/16/%E4%BD%A0%E5%A5%BD-2020/"/>
    <id>http://henryfusu.com/2020/04/16/%E4%BD%A0%E5%A5%BD-2020/</id>
    <published>2020-04-16T15:07:38.000Z</published>
    <updated>2020-04-18T06:15:35.037Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2019回顾"><a href="#2019回顾" class="headerlink" title="2019回顾"></a>2019回顾</h3><p>&emsp;&emsp;从出生到今年已然29岁，等到明年的5月份自己也将步入三十岁，这是一个挺尴尬的年纪；都说30而立30而立，而我却感觉，自己虽然不算太差，但总是离自己的目标还有很长的路要走，也算没立起来吧；以前从不写年终总结的我，终于在夜深人静的晚上，抄气了我还算帅气的Mac电脑，准备写点什么。</p><a id="more"></a><p>&emsp;&emsp;其实作为理科生的我，文笔实在是太差了，差到啥程度呢，这篇文章我憋了一周才开始形成初稿。为什么会反反复复呢，是因为对自己不熟悉领域的不确定，还有程序员那桀骜不驯的洁癖，总想一写就能出手成章；但现实是残酷的，这种想法就像鸡屁股栓绳，扯蛋一样。所以后面的文章没有逻辑。我越来越相信，创造美好的代价是：努力、失望以及毅力。首先是疼痛，然后才是欢乐。<br><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/happy.gif" alt=""></p><p>&emsp;&emsp;以下是正文：从好坏两方面来回顾自己的2019</p><h3 id="Bad"><a href="#Bad" class="headerlink" title="Bad"></a>Bad</h3><p>&emsp;&emsp;2019 年真是像传说的寒冬，特别寒冷特别的不顺，从去年和朋友一起创建公司的自信心爆棚，到今年4月份的黯然撤出，可以说短短时间经历了创业的心酸与痛苦，让我对自己，对朋友，对合作伙伴，对这个商业的社会都有了更深层次的看法；也对那些创业成功了的人多了一些敬佩。创业可能真是需要天时、地利、人和和过人的坚持。从创业出来找了一份工作，我以为自己稳定了一些，但人短不如天算，我经历从工作以来的第一次欠薪，但当时出现了一些误判，认为程序员频繁的跳槽是不好的，所以选择了坚守，果然皇天不负有心人，我被欠了三个月，其中还经历里长时间的劳动仲裁，后续我也会把当时的仲裁过程分享出来，这些东西是百度不到的。当时创业时候已经把积蓄花光，这三个月对我来说堪称是最难的岁月，当时甚至不敢带儿子去超市，好在老婆一直在后边支持我也没有给我压力我才能挺过去，自己在这几个月中也疯狂的补习基础、补习算法、补习设计模式，其中的心酸和困苦自知。终于所有的付出在8月开花结果。<br><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/19891423-6de49cafaf220c90.gif" alt=""></p><h3 id="Good"><a href="#Good" class="headerlink" title="Good"></a>Good</h3><p>&emsp;&emsp;在上家离职之后，通过当时几个月的积累，找到了一份外企的工作，工资离当初自己定的目标也很接近，目前工作也非常顺利，能抽出时间来写一些公众号，搭建自己的博客，也在慢慢参与到开源项目中，更大的收获是自己的英文口语在短短时间内迎来了比较大的提升，这算是这份工作带给我的非常好的礼物。其实后边的时来运转我把它归功于被欠薪三个月的知识积累，以前做项目比较多，所以对基础知识比较欠缺，通过这三个月的深入学习对软件这块有了更全面和深刻的理解；感叹算法怎么可以这么优雅，感叹设计模式怎么可以这么优美。所以人总是需要在经历一些事情之后才会成长。所以我也认为，后续的成长，将会从这里开始。<br><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/19891423-72c86ab92e9d05e0.gif" alt=""></p><h3 id="Future"><a href="#Future" class="headerlink" title="Future"></a>Future</h3><p>&emsp;&emsp;在充足的时间里当然不能浪费这么美好的时间(年纪大了，越来越希望时间被少点浪费)，在2020年给自己定下几个目标：</p><ul><li>首先就是读书，当自己准备写东西的时候才知道自己的词汇有多么的匮乏，所以想积累从读书开始，定一个小目标20本;</li><li>对技术的提升，当然这是自己吃饭的家伙，所以今年给自己买了一个最新的笔记本，毕竟工欲善其事必先利其器，自从自己的基础比较扎实之后，感觉写代码都有自信了呢，所以以后会在这方面继续精进。</li><li>写公众号，这件事其实是一件需要坚持才能持续的，并且内容会技术、生活和产品穿插，当然也不排除文笔好了之后对一些热点进行一些点评。最近自己的思想的转变，包括思维的转变都是从关注优质的公众号开始的，我最崇拜的stromzhang，这个哥是彻底改变了我的认知，真的需要向他学习，真实、帅气、有才华;</li><li>学英语，其实这个是比较好实现的，毕竟周围歪果仁不好，想练口语还是很多机会的。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>&emsp;&emsp;在这个浮躁的时代，希望做一个不浮躁的自己，踏实、努力、进取。最后一锅热乎乎的鸡汤。</p><h5 id="难熬的日子总会过去，不信你回头看看，你都已经在不知不觉中熬过了很多苦难，余生很长，不必慌张。"><a href="#难熬的日子总会过去，不信你回头看看，你都已经在不知不觉中熬过了很多苦难，余生很长，不必慌张。" class="headerlink" title="难熬的日子总会过去，不信你回头看看，你都已经在不知不觉中熬过了很多苦难，余生很长，不必慌张。"></a>难熬的日子总会过去，不信你回头看看，你都已经在不知不觉中熬过了很多苦难，余生很长，不必慌张。</h5><p><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/19891423-e887cdfe7c9d9ff0.gif" alt=""></p><p>​    </p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2019回顾&quot;&gt;&lt;a href=&quot;#2019回顾&quot; class=&quot;headerlink&quot; title=&quot;2019回顾&quot;&gt;&lt;/a&gt;2019回顾&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;从出生到今年已然29岁，等到明年的5月份自己也将步入三十岁，这是一个挺尴尬的年纪；都说30而立30而立，而我却感觉，自己虽然不算太差，但总是离自己的目标还有很长的路要走，也算没立起来吧；以前从不写年终总结的我，终于在夜深人静的晚上，抄气了我还算帅气的Mac电脑，准备写点什么。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Android面试的碎碎念</title>
    <link href="http://henryfusu.com/2020/04/16/Android%E9%9D%A2%E8%AF%95%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    <id>http://henryfusu.com/2020/04/16/Android%E9%9D%A2%E8%AF%95%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/</id>
    <published>2020-04-16T15:04:56.000Z</published>
    <updated>2020-04-18T06:11:34.604Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;在今年8月份入职了一家外企，恰逢最近几周公司大规模招聘Android开发，有幸参与了十几场面试，遂有感而发。在其中也从面试官的方面有了一些想法，希望分享给大家。</p><a id="more"></a><p>&emsp;&emsp;本来当做面试官对于我来说是一件比较新奇的事，但通过几场面试下来，感觉自己对面试有了更为立体的感觉。希望下面的分享能给大家带来一点点的帮助。以下是正文：<br><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/funny2.jpg" alt=""><br>&emsp;&emsp;首先说一下感想，在一个整个的面试过程中其实有几个关键的点，关键的点掌握的好有很大的几率通过面试</p><ul><li>简历<br>&emsp;&emsp;在面试官的眼里，你的第一印象就是简历，简历尽量简洁把自己掌握的关键点描述清楚，最好不超过三页，我就见过一个求职者一共七页简历，在看到第三页的时候已经很难继续往下看了，也就是后边的内容根本不在面试官的视线里。<br>&emsp;&emsp;在个人技能栏目，尽量只写你印象很深或者很有把握的，如果你使用了一个很高深的技术，但是自己说不清楚或根本答不上来，这绝对是一个减分项。可以适当的写一下知名度比较高的开源框架(不过一定要了解一下实现原理，现在已经很少不问原理的了)，这次面试的时候有个求职者个人技能写了满满一篇，让我一度以为遇到大牛了，高兴的手舞足蹈，查了好久的资料，结果面试的时候70%都没有答上来，真是那啥了。<br>&emsp;&emsp;在项目经验这里，建议最好优化成三四个参与度比较高的项目，想想其实你的一个简历写10多个项目，大部分项目的框架和技术都是一样的，真的可以整合成一个集合版，反而会体现项目的深度。另外要对你做过的项目绝对的了解，因为面试有肯能就是从项目开始。<ul><li>表达<br>&emsp;&emsp;有的人说表达没那么重要，这个我要反对一下，好的表达绝对能为自己的面试加分，可以一下提升面试官的好感度。想想一个表达顺畅一个支支吾吾，你会选择哪一个，所以程序员们在提升自己技术的同时，别忘了把自己的表达也锻炼一下。</li><li>Java基础<br>&emsp;&emsp;虽然现在Google 主推kotlin语言，但是现在大部分的面试还是以Java为模板去面试，所以我们掌握Java基础是非常有必要的，是扎实的掌握而不是2个问题下去就不知所云。如果你能掌握基础同时又可以把JVM、类加载机制、多线程锁、设计模式（能熟练使用5中设计模式已经足够面对大多数开发）、还有一些数据结构比如(栈、链表、HashMap)了解清楚，通过面试的几率很大，现在面试HashMap已经不简单的了解一些简单的原理，面试官希望听到更深层的原理，所以在这块下点功夫还是很有用的。</li><li>Android基础<br>&emsp;&emsp;我们做Android开发这是必备的技能，但最近面试和我自己面试的经验来看，现在的Android面试已经很少面试Activity生命周期等这种低级的问题，好多面试官开始喜欢问一些深层次的原理，比如Binder原理、热修复原理、AMS这种相对系统级的原理。因为现在Android开发工程师还是比较饱和的，企业招聘的需求也会随之提高，更多的会招中高级工程师，而这些也算是进阶的必备，掌握了这些，你才能在面试中有更多的筹码。</li><li>第三方库<br>&emsp;&emsp;在项目开发中，我们会使用到很多第三方库，在非常常用的库中，我们一定要找三到四个知名的开源库，阅读它的源码，知道它的原理。比如Glide、okHttp这种，而且要知道和它功能类似的库和它有什么区别，比如Volley和okHttp，因为这些在使用方面实在是太简单了，简单到比Activity的生命周期还省事，所以如果我们只会使用而不了解原理，很难在众多面试者中脱颖而出，很难找到好的工作。如果想往更高级进阶一定要多度源码。</li><li>眼界<br>&emsp;&emsp;程序员在平时一定不能只关注自己做的一些技术，有时间一定要多关注其他的技术，比如有时间看一看Vue，尝试用Vue写一段代码，那么你对mvvm框架也会有更深层的了解。</li></ul></li></ul><p>&emsp;&emsp;第一次一口气写这么多，文笔略差，但好歹也算开始了。本来技术博客想基于10.0系统把Framework这块分享一点知识，但经过几场面试，自己又想写一个基础的东西，因为再复杂的框架也是用基础写出来的。后面会优先分享Java/Android基础，也会自己做一些开源项目，虽然写技术文档有一些晚了，但好歹也算是开始了，如果有问题想询问，或者觉得技术不错的我也可以进行内推。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;在今年8月份入职了一家外企，恰逢最近几周公司大规模招聘Android开发，有幸参与了十几场面试，遂有感而发。在其中也从面试官的方面有了一些想法，希望分享给大家。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>初来乍到,请多指教.</title>
    <link href="http://henryfusu.com/2020/04/16/%E5%88%9D%E6%9D%A5%E4%B9%8D%E5%88%B0-%E8%AF%B7%E5%A4%9A%E6%8C%87%E6%95%99/"/>
    <id>http://henryfusu.com/2020/04/16/%E5%88%9D%E6%9D%A5%E4%B9%8D%E5%88%B0-%E8%AF%B7%E5%A4%9A%E6%8C%87%E6%95%99/</id>
    <published>2020-04-16T14:25:02.000Z</published>
    <updated>2020-04-18T06:10:19.096Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;怀着无比忐忑和矛盾的心情开始了自己的第一篇博客，写博客这件事规划了接近两年，最近才算真正开始投入,算了算自己这算是丢失的两年。好的方向是自己终于迈出这一步。希望用倒逼输出的方式让自己把写博客这件事坚持下去，锻炼自己的写作能力，思维逻辑能力。</p><a id="more"></a><p><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/funny.jpg" alt=""><br>&emsp;&emsp;俗话说万事开头难，在写博客这件事上第一次感觉到事情无从下手。左顾右盼终于写下第一笔，以此纪念一下。在此，给自己定下个目标，既然已经决定开始更新博客，就要一直坚持下去，每周至少更新一篇。因为自己是做Android系统开发，所以每周更新一篇技术文档，由浅入深，先由简单基础的技术博客开始。每周不定时更新自己的一些感想感悟，达到锻炼写作的能力。<br><img src="https://oss-image-henry.oss-cn-beijing.aliyuncs.com/images/mood.jpg" alt=""></p><p> &emsp;&emsp;以上是我编辑完这篇博客的心情，如果有想一起进步的朋友也可以私信我，让我在坚持的路上不孤单。最后给大家贴一个鸡汤。</p><p>&emsp;&emsp;借用某扑JRS的话：人的一生会经历四次成长，第一次是发现父母不能给我最好的，第二次是发现父母给我的已经足够，第三次是发现父母把最好的都给我了，第四次是把我们最好的给父母。共勉！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;怀着无比忐忑和矛盾的心情开始了自己的第一篇博客，写博客这件事规划了接近两年，最近才算真正开始投入,算了算自己这算是丢失的两年。好的方向是自己终于迈出这一步。希望用倒逼输出的方式让自己把写博客这件事坚持下去，锻炼自己的写作能力，思维逻辑能力。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
